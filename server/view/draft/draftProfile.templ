package draft

import (
    "server/view"
    "server/model"
    "fmt"
	"server/utils"
)

templ DraftProfileIndex (draft model.DraftModel, isOwner bool) {
    <form
        class="flex flex-row w-full h-full"
        hx-swap="outerHTML"
        hx-post={utils.GetUpdateUrl(draft.Id)}
        action=""
        method="post"
        enctype="multipart/form-data"
    >
        <div class="w-64 flex flex-col">
            <div class="card bg-base-200 m-2 p-2 h-56">
                <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQk_FXy4YZZT1e7rhjFmME4WVyH4VUwGdM0iQ&s" alt="Profile Image" class="w-full h-full"></img>
                <input disabled?={!isOwner} type="file" name="profilePic" accept=".png"/>
            </div>
            <div class="card bg-base-200 m-2 p-2 grow">
                <h1 class="border-b border-b-slate-600 pl-4 pr-4 text-2xl">
                    Status: { string(draft.Status) }
                </h1>
                <h1 class="card-title border-b border-b-slate-600 pl-4 pr-4 text-2xl">
                    Description
                </h1>
                <textarea disabled?={!isOwner} name="description" class="h-full bg-transparent resize-none">{draft.Description}</textarea>
            </div>
        </div>
        <div class="grow flex flex-col">
            <div class="card bg-base-200 m-2 p-2 h-24">
                <input disabled?={!isOwner} name="draftName" placeholder="Draft Name" value={draft.DisplayName} class="h-full bg-transparent text-6xl p-4"/>
            </div>
            <div class="m-2 p-2 grow" id="playerList">
                <div class="grid grid-cols-4 gap-x-4 gap-y-4">
                    for _, player := range draft.Players {
                        if player.Pending {
                            <div class="card bg-red-800 shadow-xl mx-auto mb-8">
                                <div class="card-body p-5 flex justify-center items-center">
                                    <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQk_FXy4YZZT1e7rhjFmME4WVyH4VUwGdM0iQ&s" alt="Profile Image" width="100" height="100"></img>
                                    <div class="card-title pb-[4px] justify-around border-b border-b-slate-600">
                                        <h1>{player.User.Username}</h1>
                                    </div>
                                    Pick Order: { fmt.Sprintf("%d", player.PlayerOrder) }
                                </div>
                            </div>
                        } else {
                            <div class="card bg-slate-800 shadow-xl mx-auto mb-8">
                                <div class="card-body p-5 flex justify-center items-center">
                                    <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQk_FXy4YZZT1e7rhjFmME4WVyH4VUwGdM0iQ&s" alt="Profile Image" width="100" height="100"></img>
                                    <div class="card-title pb-[4px] justify-around border-b border-b-slate-600">
                                        <h1>{player.User.Username}</h1>
                                    </div>
                                    Pick Order: { fmt.Sprintf("%d", player.PlayerOrder) }
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="w-64 flex flex-col h-full">
            <div class="card bg-base-200 m-2 p-2 h-24 h-full">
                <h1 class="card-title border-b border-b-slate-600 pl-4 pr-4 text-4xl">
                    Settings
                </h1>
                <div class="flex flex-col p-2 pt-8">
                    <h2 class="pt-2">Time Between Picks</h2>
                    <input disabled?={!isOwner} name="interval" value={fmt.Sprintf("%d", draft.Interval)} type="range"/>
                    <h2 class="pt-2">Start Time</h2>
                    <input disabled?={!isOwner} name="startTime" value={draft.StartTime.Format("2006-01-02T15:04:05")} type="datetime-local"/>
                    <h2 class="pt-2">End Time</h2>
                    <input disabled?={!isOwner} name="endTime" value={draft.EndTime.Format("2006-01-02T15:04:05")} type="datetime-local"/>
                </div>
                <h1 class="card-title border-b border-b-slate-600 pl-4 pr-4 text-2xl">
                    Invite Players
                </h1>
                if !isOwner {
                    <div class="flex h-full w-full flex-col justify-center text-rose-600">
                        You must be the owner of the draft in order to invite players.
                    </div>
                } else if draft.Id != 0 && draft.Id != -1 {
                    <div class="flex flex-col p-2 pt-8">
                        Search: <input class="form-control" type="search"
                        disabled?={!isOwner}
                        name="search" placeholder="Search Users..."
                        hx-post="/u/searchPlayers"
                        hx-trigger="input changed delay:500ms, keyup[key=='Enter'], load"
                        hx-target="#searchResults"
                        hx-indicator=".htmx-indicator"
                        hx-swap="innerHTML"
                        />
                    <div id="searchResults"> </div>
                    </div>
                } else {
                    <div class="flex justify-center w-full h-full flex-row text-center">
                        <div class="flex h-full w-full flex-col justify-center text-rose-600">
                            You must save your draft in order to invite players.
                        </div>
                    </div>
                }
            </div>
            <div class="flex flex-row-reverse pb-2 pl-2 pr-2 pt-2 w-full">
                <button disabled?={!isOwner} class="badge badge-primary hover:scale-[1.1] w-full h-8 text-xl">Save</button>
            </div>
        </div>
    </form>
}

templ DraftProfile (page string, fromProtected bool, username string, cmp templ.Component, draftId int) {
    @view.Index(page, fromProtected, "", draftId) {
        @cmp
    }
}

templ PlayerList(players []model.DraftPlayer) {
    <div class="m-2 p-2 grow" id="playerList" hx-swap-oob="outerHTML:#playerList">
        <div class="grid grid-cols-4 gap-x-4 gap-y-4">
            for _, player := range players {
                if player.Pending {
                    <div class="card bg-red-800 shadow-xl mx-auto mb-8">
                        <div class="card-body p-5 flex justify-center items-center">
                            <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQk_FXy4YZZT1e7rhjFmME4WVyH4VUwGdM0iQ&s" alt="Profile Image" width="100" height="100"></img>
                            <div class="card-title pb-[4px] justify-around border-b border-b-slate-600">
                                <h1>{player.User.Username}</h1>
                            </div>
                            Pick Order: { fmt.Sprintf("%d", player.PlayerOrder) }
                        </div>
                    </div>
                } else {
                    <div class="card bg-slate-800 shadow-xl mx-auto mb-8">
                        <div class="card-body p-5 flex justify-center items-center">
                            <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQk_FXy4YZZT1e7rhjFmME4WVyH4VUwGdM0iQ&s" alt="Profile Image" width="100" height="100"></img>
                            <div class="card-title pb-[4px] justify-around border-b border-b-slate-600">
                                <h1>{player.User.Username}</h1>
                            </div>
                            Pick Order: { fmt.Sprintf("%d", player.PlayerOrder) }
                        </div>
                    </div>
                }
            }
        </div>
    </div>
}

templ PlayerSearchResults(users []model.User, draftId int, isOwner bool) {
    <table class="w-full" id="inviteTable">
        <thead>
            <th></th>
            <th>Username</th>
        </thead>
        <tbody>
            for _, user := range users {
                <tr>
                    <td>
                        <button
                            disabled?={!isOwner}
                            hx-target="#inviteTable"
                            hx-swap="outerHTML"
                            name="userGuid"
                            value={ fmt.Sprintf("%d", user.UserGuid) }
                            hx-post={ fmt.Sprintf("/u/draft/%d/invitePlayer", draftId) }>
                                Invite
                        </button>
                    </td>
                    <td>
                        { user.Username }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

templ UpdateAfterInvite(users []model.User, draftId int, players []model.DraftPlayer, isOwner bool) {
    @PlayerList(players)
    @PlayerSearchResults(users, draftId, isOwner)
}
