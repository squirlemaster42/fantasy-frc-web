package draft

import "server/model"
import "server/view"
import "strings"

templ DraftPickIndex (draft model.Draft, pickUrl string, invalidPick bool, notifierUrl string, isCurrentPick bool) {
    <div id="draftPicks" class="flex items-center justify-center w-full pt-4">
        <div hx-ext="ws" ws-connect={notifierUrl} class="w-full">
            <form
                hx-swap="outerHTML transition:true"
                hx-post={pickUrl}
                hx-target="#draftPicks"
                action=""
                method="post"
            >
                <div id="draft-table" class="flex flex-col justify-center">
                    <div class="overflow-y-auto max-h-[90vh]">
                        <div>
                            if invalidPick {
                                <span class="text-red-800">You have entered an invalid pick. Please pick again.</span>
                            }
                        </div>
                        @RenderPicks(draft, isCurrentPick)
                        <div class="w-full flex flex-row justify-center pt-8">
                            <button class="bg-blue-500 text-white font-bold py-2 px-4 rounded" type="submit">
                                Make Pick
                            </button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
}

templ DraftPick (page string, fromProtected bool, username string, cmp templ.Component, draftId int) {
    @view.Index(page, fromProtected, username, draftId) {
        @cmp
    }
}


templ RenderPicks(draft model.Draft, isCurrentPick bool) {
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 px-2" id="pickTable" hx-swap="outerHTML">
        for _, player := range draft.Players {
            <div class="overflow-x-auto border rounded shadow">
                <table class="min-w-full table-auto border-collapse">
                    <thead>
                        <tr class="bg-gray-200">
                            <th scope="col" class="border px-4 py-2 text-center text-sm font-semibold text-black">{player.User.Username}</th>
                        </tr>
                    </thead>
                    <tbody>
                        {{lines := 0}}
                        for _, pick := range player.Picks {
                            if pick.Pick.Valid {
                                <tr>
                                    <td class="border px-4 py-2 text-center text-sm">{strings.TrimLeft(pick.Pick.String, "frc")}</td>
                                </tr>
                                {{lines++}}
                            }
                        }
                        if draft.NextPick.Id == player.Id {
                            <tr>
                                <td class="border px-4 py-2">
                                    <input
                                        placeholder={player.Picks[len(player.Picks) - 1].ExpirationTime.Format("01-02-2006 15:04:05")}
                                        disabled?={!isCurrentPick}
                                        name="pickInput"
                                        class="w-full p-2 rounded bg-blue-950 text-white text-sm"
                                    />
                                </td>
                            </tr>
                            {{lines++}}
                        }
                        for lines < 8 {
                            <tr>
                                <td class="border px-4 py-2"></td>
                            </tr>
                            {{lines++}}
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
}

