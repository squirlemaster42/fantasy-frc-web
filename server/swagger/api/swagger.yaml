openapi: 3.0.1
info:
  title: The Blue Alliance API v3
  description: "# Overview \n\n Information and statistics about FIRST Robotics Competition\
    \ teams and events. \n\n# Authentication \n\nAll endpoints require an Auth Key\
    \ to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key\
    \ yet, you can obtain one from your [Account Page](/account)."
  version: 3.9.13
  x-version-info: "Versions of the API follow the format X.Y.Z, with X being a major\
    \ version, Y denoting the minor version, and Z the point release. Changes to the\
    \ spec or API that result in a major version change will significantly impact\
    \ implementations. Changes to the minor version indicate paths and/or fields in\
    \ existing models may be added, and any breaking changes will be confined to paths\
    \ or models listed as in-development in the prior minor version. Changes to the\
    \ point release indicate no format or structure changes to the paths or models,\
    \ but updated or clarified documentation. Note that changes to paths and models\
    \ refer to the actual result from the API, not the documentation."
  x-changes: "3.9.13: Fixes missing 2023 endgame enum. 3.9.12: Updates 2025 match\
    \ breakdown penalties to be correct for 2025. 3.9.11: Adds tba_botRowCount, tba_midRowCount,\
    \ and tba_topRowCount to 2025 match breakdown autoReef and teleopReef. 3.9.10:\
    \ Add 2025 score breakdowns. 3.9.9: Fix nullable fields within Team_Event_Status.\
    \ 3.9.8: Add district awards endpoint. Add nullable to district rankings. 3.9.7:\
    \ Add district history endpoint. 3.9.6: Added History endpoint; added NotablesInsight\
    \ endpoint. 3.9.5: Properly documented that event.district may be null. 3.9.4:\
    \ Properly documented that a Status may be null (future events). 3.9.3: Proper\
    \ nullable event rankings/oprs/coprs 3.9.2: Add event/key/team_media endpoint;\
    \ add team_keys to media objects. 3.9.1: Mark WLT_Record as nullable. 3.8.2-3.9.0:\
    \ Fixed undefined vs nullable fields. Adds 2024 score breakdown. Links score breakdown\
    \ types to score_breakdown field. Adds leaderboard insights endpoint and type.\
    \ 3.8.1-3.8.2: Replace `If-Modified-Since` with `If-None-Match` and `Last-Modified`\
    \ with `ETag`. 3.8.0-3.8.1: Added Webcast date field. 3.7.0-3.8.0: Added 2020\
    \ Match Breakdown. 3.6.0-3.7.0: Added Zebra MotionWorks endpoints and models.\
    \ 3.5.2-3.6.0: Added `school_name` to the Team model. 3.5.1-3.5.2: Removed `key`\
    \ from the Media object, set `foreign_key` as a required property. 3.5-3.5.1:\
    \ Fixed api clients crashing when requesting simple matches resulting in ties.\
    \ 3.04.1 - 3.5: Updated the spec to follow OpenAPI standards. 3.04.0 - 3.04.1:\
    \ Team motto will now return null. 3.03.1 - 3.04.0: Add direct_url and view_url\
    \ to the Media model. 3.03.0 - 3.03.1: Fix model of /team/{team_key}/robots to\
    \ match API, add min and max for year and add min for page_num. 3.02.1 - 3.03.0:\
    \ Added Timeseries models and endpoints. 3.02.0 - 3.02.1: Fixed the model for\
    \ `/team/{team_key}/districts` to match return from API. 3.1.0 - 3.02.0: Added\
    \ `tba_gameData` to score breakdown and a leading zero to the minor version number\
    \ to allow for easier sorting later. 3.0.5 - 3.1.0: Version bump for 2018 added\
    \ fields and endpoints. Models Updated: `Team_Event_Status`, `Media`, 2018 Score\
    \ Breakdowns. Endpoints Added: `/team/{team_key}/events/{year}/statuses`, `/event/{event_key}/teams/statuses`\
    \ 3.0.4 - 3.0.5: Minor spelling fixes. Remove 2016 fields from `Match_Score_Breakdown_2017_Alliance`\
    \ model. Fix `first_event_id` in `Event` model to correct type. Update `Media`.`type`\
    \ enum. --- 3.0.3 - 3.0.4: Correct syntax in `Team_Event_Status_playoff` object,\
    \ include descriptions in `Event_District_Points` and fix the path in `Team_Event_Status_playoff.properties.record`\
    \ in order to more closely match Swagger spec. Fix syntax of `Match.video` to\
    \ be correct and accurately reflect what is returned by the API. --- 3.0.2 - 3.0.3:\
    \ `extra_stats` and `extra_stats_info` added to `Event_Ranking` model. Corrected\
    \ match video property claiming to use the `Media` model, which it doesn't. Added\
    \ `first_event_code` to the `Event` model. Added `/team/{team_key}/media/tag/{media_tag}`\
    \ and year endpoints. Added `dq_team_keys` to `Match_alliance` model.  --- 3.0.1\
    \ - 3.0.2: `Team_Event_Status` and `Event_Ranking` model documentation changed\
    \ to reflect actual API return. Changes involved W-L-T and ranking properties.\
    \ --- 3.0.0 - 3.0.1: Descriptions updated to clarify some terms and improve grammar.\
    \ The `district` property on the `Event` object now points to the `District_List`\
    \ model, which was identical. `Required` fields on fully documented models now\
    \ represent fields that may not be `null`. `District_Ranking` model documented."
servers:
- url: https://www.thebluealliance.com/api/v3
tags:
- name: TBA
  description: Calls that expose TBA internals or status.
- name: list
  description: Calls that return a list of records.
- name: team
  description: Calls that return team or team-specific information.
- name: event
  description: "Calls that return event, or event-specific information."
- name: match
  description: "Calls that return match, or match-specific information."
- name: district
  description: "Calls that return district, or district-related information."
- name: regional_advancement
  description: "Calls that return information about regional teams advancing to CMP,\
    \ starting in 2025"
- name: insight
  description: "Calls that return insights, or insight-related information."
paths:
  /status:
    get:
      tags:
      - TBA
      description: "Returns API status, and TBA status information."
      operationId: getStatus
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/API_Status"
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /teams/{page_num}:
    get:
      tags:
      - team
      - list
      description: "Gets a list of `Team` objects, paginated in groups of 500."
      operationId: getTeams
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page_num
        in: path
        description: "Page number of results to return, zero-indexed"
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /teams/{page_num}/simple:
    get:
      tags:
      - team
      - list
      description: "Gets a list of short form `Team_Simple` objects, paginated in\
        \ groups of 500."
      operationId: getTeamsSimple
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page_num
        in: path
        description: "Page number of results to return, zero-indexed"
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team_Simple"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /teams/{page_num}/keys:
    get:
      tags:
      - team
      - list
      description: "Gets a list of Team keys, paginated in groups of 500. (Note, each\
        \ page will not have 500 teams, but will include the teams within that range\
        \ of 500.)"
      operationId: getTeamsKeys
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page_num
        in: path
        description: "Page number of results to return, zero-indexed"
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /teams/{year}/{page_num}:
    get:
      tags:
      - team
      - list
      description: "Gets a list of `Team` objects that competed in the given year,\
        \ paginated in groups of 500."
      operationId: getTeamsByYear
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: path
        description: Competition Year (or Season). Must be 4 digits.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: page_num
        in: path
        description: "Page number of results to return, zero-indexed"
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /teams/{year}/{page_num}/simple:
    get:
      tags:
      - team
      - list
      description: "Gets a list of short form `Team_Simple` objects that competed\
        \ in the given year, paginated in groups of 500."
      operationId: getTeamsByYearSimple
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: path
        description: Competition Year (or Season). Must be 4 digits.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: page_num
        in: path
        description: "Page number of results to return, zero-indexed"
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team_Simple"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /teams/{year}/{page_num}/keys:
    get:
      tags:
      - team
      - list
      description: "Gets a list Team Keys that competed in the given year, paginated\
        \ in groups of 500."
      operationId: getTeamsByYearKeys
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: path
        description: Competition Year (or Season). Must be 4 digits.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: page_num
        in: path
        description: "Page number of results to return, zero-indexed"
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                description: Array of Team Keys
                items:
                  type: string
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}:
    get:
      tags:
      - team
      description: Gets a `Team` object for the team referenced by the given key.
      operationId: getTeam
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/simple:
    get:
      tags:
      - team
      description: Gets a `Team_Simple` object for the team referenced by the given
        key.
      operationId: getTeamSimple
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team_Simple"
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/history:
    get:
      tags:
      - team
      description: "Gets the history for the team referenced by the given key, including\
        \ their events and awards."
      operationId: getTeamHistory
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response with team's history including events and
            awards.
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/History"
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/years_participated:
    get:
      tags:
      - team
      description: Gets a list of years in which the team participated in at least
        one competition.
      operationId: getTeamYearsParticipated
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/districts:
    get:
      tags:
      - team
      - district
      description: Gets an array of districts representing each year the team was
        in a district. Will return an empty array if the team was never in a district.
      operationId: getTeamDistricts
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/District_List"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/robots:
    get:
      tags:
      - team
      description: Gets a list of year and robot name pairs for each year that a robot
        name was provided. Will return an empty array if the team has never named
        a robot.
      operationId: getTeamRobots
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team_Robot"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/events:
    get:
      tags:
      - team
      - event
      description: Gets a list of all events this team has competed at.
      operationId: getTeamEvents
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/events/simple:
    get:
      tags:
      - team
      - event
      description: Gets a short-form list of all events this team has competed at.
      operationId: getTeamEventsSimple
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event_Simple"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/events/keys:
    get:
      tags:
      - team
      - event
      description: Gets a list of the event keys for all events this team has competed
        at.
      operationId: getTeamEventsKeys
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                description: Array of Event Keys
                items:
                  type: string
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/events/{year}:
    get:
      tags:
      - team
      - event
      description: Gets a list of events this team has competed at in the given year.
      operationId: getTeamEventsByYear
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: path
        description: Competition Year (or Season). Must be 4 digits.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/events/{year}/simple:
    get:
      tags:
      - team
      - event
      description: Gets a short-form list of events this team has competed at in the
        given year.
      operationId: getTeamEventsByYearSimple
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: path
        description: Competition Year (or Season). Must be 4 digits.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event_Simple"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/events/{year}/keys:
    get:
      tags:
      - team
      - event
      description: Gets a list of the event keys for events this team has competed
        at in the given year.
      operationId: getTeamEventsByYearKeys
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: path
        description: Competition Year (or Season). Must be 4 digits.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                description: Array of Event Keys
                items:
                  type: string
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/events/{year}/statuses:
    get:
      tags:
      - list
      - team
      - event
      description: Gets a key-value list of the event statuses for events this team
        has competed at in the given year.
      operationId: getTeamEventsStatusesByYear
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: path
        description: Competition Year (or Season). Must be 4 digits.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  anyOf:
                  - $ref: "#/components/schemas/Team_Event_Status"
                  - type: "null"
                description: A key-value pair of `Team_Event_Status` objects with
                  the event key as the key.
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/event/{event_key}/matches:
    get:
      tags:
      - team
      - event
      - match
      description: Gets a list of matches for the given team and event.
      operationId: getTeamEventMatches
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Match"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/event/{event_key}/matches/simple:
    get:
      tags:
      - team
      - event
      - match
      description: Gets a short-form list of matches for the given team and event.
      operationId: getTeamEventMatchesSimple
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Match"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/event/{event_key}/matches/keys:
    get:
      tags:
      - team
      - event
      - match
      description: Gets a list of match keys for matches for the given team and event.
      operationId: getTeamEventMatchesKeys
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                description: Array of Match Keys
                items:
                  type: string
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/event/{event_key}/awards:
    get:
      tags:
      - team
      - event
      description: Gets a list of awards the given team won at the given event.
      operationId: getTeamEventAwards
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Award"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/event/{event_key}/status:
    get:
      tags:
      - team
      - event
      description: Gets the competition rank and status of the team at the given event.
      operationId: getTeamEventStatus
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/awards:
    get:
      tags:
      - team
      description: Gets a list of awards the given team has won.
      operationId: getTeamAwards
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Award"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/awards/{year}:
    get:
      tags:
      - team
      description: Gets a list of awards the given team has won in a given year.
      operationId: getTeamAwardsByYear
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: path
        description: Competition Year (or Season). Must be 4 digits.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Award"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/matches/{year}:
    get:
      tags:
      - team
      - match
      description: Gets a list of matches for the given team and year.
      operationId: getTeamMatchesByYear
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: path
        description: Competition Year (or Season). Must be 4 digits.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Match"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/matches/{year}/simple:
    get:
      tags:
      - team
      - match
      description: Gets a short-form list of matches for the given team and year.
      operationId: getTeamMatchesByYearSimple
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: path
        description: Competition Year (or Season). Must be 4 digits.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Match_Simple"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/matches/{year}/keys:
    get:
      tags:
      - team
      - match
      description: Gets a list of match keys for matches for the given team and year.
      operationId: getTeamMatchesByYearKeys
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: path
        description: Competition Year (or Season). Must be 4 digits.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                description: Array of Match Keys
                items:
                  type: string
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/media/{year}:
    get:
      tags:
      - team
      description: Gets a list of Media (videos / pictures) for the given team and
        year.
      operationId: getTeamMediaByYear
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: path
        description: Competition Year (or Season). Must be 4 digits.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Media"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/media/tag/{media_tag}:
    get:
      tags:
      - team
      description: Gets a list of Media (videos / pictures) for the given team and
        tag.
      operationId: getTeamMediaByTag
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: media_tag
        in: path
        description: Media Tag which describes the Media.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Media"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/media/tag/{media_tag}/{year}:
    get:
      tags:
      - team
      description: "Gets a list of Media (videos / pictures) for the given team, tag\
        \ and year."
      operationId: getTeamMediaByTagYear
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: media_tag
        in: path
        description: Media Tag which describes the Media.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: path
        description: Competition Year (or Season). Must be 4 digits.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Media"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /team/{team_key}/social_media:
    get:
      tags:
      - team
      description: Gets a list of Media (social media) for the given team.
      operationId: getTeamSocialMedia
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: team_key
        in: path
        description: "TBA Team Key, eg `frc254`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Media"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /events/{year}:
    get:
      tags:
      - event
      - list
      description: Gets a list of events in the given year.
      operationId: getEventsByYear
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: path
        description: Competition Year (or Season). Must be 4 digits.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /events/{year}/simple:
    get:
      tags:
      - event
      - list
      description: Gets a short-form list of events in the given year.
      operationId: getEventsByYearSimple
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: path
        description: Competition Year (or Season). Must be 4 digits.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event_Simple"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /events/{year}/keys:
    get:
      tags:
      - event
      - list
      description: Gets a list of event keys in the given year.
      operationId: getEventsByYearKeys
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: path
        description: Competition Year (or Season). Must be 4 digits.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                description: Array of Event Keys
                items:
                  type: string
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /event/{event_key}:
    get:
      tags:
      - event
      description: Gets an Event.
      operationId: getEvent
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /event/{event_key}/simple:
    get:
      tags:
      - event
      description: Gets a short-form Event.
      operationId: getEventSimple
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event_Simple"
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /event/{event_key}/alliances:
    get:
      tags:
      - event
      description: Gets a list of Elimination Alliances for the given Event.
      operationId: getEventAlliances
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                nullable: true
                items:
                  $ref: "#/components/schemas/Elimination_Alliance"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /event/{event_key}/insights:
    get:
      tags:
      - event
      description: Gets a set of Event-specific insights for the given Event.
      operationId: getEventInsights
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_1"
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /event/{event_key}/oprs:
    get:
      tags:
      - event
      description: "Gets a set of Event OPRs (including OPR, DPR, and CCWM) for the\
        \ given Event."
      operationId: getEventOPRs
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_2"
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /event/{event_key}/coprs:
    get:
      tags:
      - event
      description: Gets a set of Event Component OPRs for the given Event.
      operationId: getEventCOPRs
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_3"
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /event/{event_key}/predictions:
    get:
      tags:
      - event
      description: Gets information on TBA-generated predictions for the given Event.
        Contains year-specific information. *WARNING* This endpoint is currently under
        development and may change at any time.
      operationId: getEventPredictions
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_4"
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /event/{event_key}/rankings:
    get:
      tags:
      - event
      description: Gets a list of team rankings for the Event.
      operationId: getEventRankings
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_5"
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /event/{event_key}/district_points:
    get:
      tags:
      - event
      - district
      description: "Gets a list of district points for the Event. These are always\
        \ calculated, regardless of event type, and may/may not be actually useful."
      operationId: getEventDistrictPoints
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_6"
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /event/{event_key}/regional_champs_pool_points:
    get:
      tags:
      - event
      description: "For 2025+ Regional events, this will return points towards the\
        \ Championship qualification pool."
      operationId: getRegionalChampsPoolPoints
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_6"
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /event/{event_key}/advancement_points:
    get:
      tags:
      - event
      description: "Depending on the type of event (district/regional), this will\
        \ return either district points or regional CMP points"
      operationId: getEventAdvancementPoints
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_6"
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /event/{event_key}/teams:
    get:
      tags:
      - event
      - team
      - list
      description: Gets a list of `Team` objects that competed in the given event.
      operationId: getEventTeams
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /event/{event_key}/teams/simple:
    get:
      tags:
      - event
      - team
      - list
      description: Gets a short-form list of `Team` objects that competed in the given
        event.
      operationId: getEventTeamsSimple
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team_Simple"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /event/{event_key}/teams/keys:
    get:
      tags:
      - event
      - team
      - list
      description: Gets a list of `Team` keys that competed in the given event.
      operationId: getEventTeamsKeys
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                description: Array of Team Keys
                items:
                  type: string
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /event/{event_key}/teams/statuses:
    get:
      tags:
      - event
      - team
      - list
      description: Gets a key-value list of the event statuses for teams competing
        at the given event.
      operationId: getEventTeamsStatuses
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  anyOf:
                  - $ref: "#/components/schemas/Team_Event_Status"
                  - type: "null"
                description: A key-value pair of `Team_Event_Status` objects with
                  the event key as the key.
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /event/{event_key}/matches:
    get:
      tags:
      - event
      - match
      description: Gets a list of matches for the given event.
      operationId: getEventMatches
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Match"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /event/{event_key}/matches/simple:
    get:
      tags:
      - event
      - match
      description: Gets a short-form list of matches for the given event.
      operationId: getEventMatchesSimple
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Match_Simple"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /event/{event_key}/matches/keys:
    get:
      tags:
      - event
      - match
      description: Gets a list of match keys for the given event.
      operationId: getEventMatchesKeys
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                description: Array of Match Keys
                items:
                  type: string
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /event/{event_key}/matches/timeseries:
    get:
      tags:
      - event
      - match
      description: |-
        Gets an array of Match Keys for the given event key that have timeseries data. Returns an empty array if no matches have timeseries data.
        *WARNING:* This is *not* official data, and is subject to a significant possibility of error, or missing data. Do not rely on this data for any purpose. In fact, pretend we made it up.
        *WARNING:* This endpoint and corresponding data models are under *active development* and may change at any time, including in breaking ways.
      operationId: getEventMatchTimeseries
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: Match Key
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /event/{event_key}/awards:
    get:
      tags:
      - event
      description: Gets a list of awards from the given event.
      operationId: getEventAwards
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Award"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /event/{event_key}/team_media:
    get:
      tags:
      - event
      description: Gets a list of media objects that correspond to teams at this event.
      operationId: getEventTeamMedia
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: event_key
        in: path
        description: "TBA Event Key, eg `2016nytr`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Media"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /match/{match_key}:
    get:
      tags:
      - match
      description: Gets a `Match` object for the given match key.
      operationId: getMatch
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: match_key
        in: path
        description: "TBA Match Key, eg `2016nytr_qm1`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Match"
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /match/{match_key}/simple:
    get:
      tags:
      - match
      description: Gets a short-form `Match` object for the given match key.
      operationId: getMatchSimple
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: match_key
        in: path
        description: "TBA Match Key, eg `2016nytr_qm1`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Match_Simple"
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /match/{match_key}/timeseries:
    get:
      tags:
      - match
      description: |-
        Gets an array of game-specific Match Timeseries objects for the given match key or an empty array if not available.
        *WARNING:* This is *not* official data, and is subject to a significant possibility of error, or missing data. Do not rely on this data for any purpose. In fact, pretend we made it up.
        *WARNING:* This endpoint and corresponding data models are under *active development* and may change at any time, including in breaking ways.
      operationId: getMatchTimeseries
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: match_key
        in: path
        description: "TBA Match Key, eg `2016nytr_qm1`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties: {}
                  example: {}
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /match/{match_key}/zebra_motionworks:
    get:
      tags:
      - match
      description: Gets Zebra MotionWorks data for a Match for the given match key.
      operationId: getMatchZebra
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: match_key
        in: path
        description: "TBA Match Key, eg `2016nytr_qm1`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Zebra"
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /districts/{year}:
    get:
      tags:
      - district
      description: "Gets a list of districts and their corresponding district key,\
        \ for the given year."
      operationId: getDistrictsByYear
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: path
        description: Competition Year (or Season). Must be 4 digits.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/District_List"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /district/{district_abbreviation}/history:
    get:
      tags:
      - district
      description: "Gets a list of District objects with the given district abbreviation.\
        \ This accounts for district abbreviation changes, such as MAR to FMA."
      operationId: getDistrictHistory
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: district_abbreviation
        in: path
        description: "District abbreviation, eg `ne` or `fim`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/District_List"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /district/{district_key}/events:
    get:
      tags:
      - district
      - event
      - list
      description: Gets a list of events in the given district.
      operationId: getDistrictEvents
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: district_key
        in: path
        description: "TBA District Key, eg `2016fim`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /district/{district_key}/awards:
    get:
      tags:
      - district
      - event
      - list
      description: Gets a list of awards in the given district.
      operationId: getDistrictAwards
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: district_key
        in: path
        description: "TBA District Key, eg `2016fim`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Award"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /district/{district_key}/events/simple:
    get:
      tags:
      - district
      - event
      - list
      description: Gets a short-form list of events in the given district.
      operationId: getDistrictEventsSimple
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: district_key
        in: path
        description: "TBA District Key, eg `2016fim`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event_Simple"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /district/{district_key}/events/keys:
    get:
      tags:
      - district
      - event
      - list
      description: Gets a list of event keys for events in the given district.
      operationId: getDistrictEventsKeys
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: district_key
        in: path
        description: "TBA District Key, eg `2016fim`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                description: Array of Event Keys
                items:
                  type: string
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /district/{district_key}/teams:
    get:
      tags:
      - district
      - team
      - list
      description: Gets a list of `Team` objects that competed in events in the given
        district.
      operationId: getDistrictTeams
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: district_key
        in: path
        description: "TBA District Key, eg `2016fim`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /district/{district_key}/teams/simple:
    get:
      tags:
      - district
      - team
      - list
      description: Gets a short-form list of `Team` objects that competed in events
        in the given district.
      operationId: getDistrictTeamsSimple
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: district_key
        in: path
        description: "TBA District Key, eg `2016fim`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team_Simple"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /district/{district_key}/teams/keys:
    get:
      tags:
      - district
      - team
      - list
      description: Gets a list of `Team` objects that competed in events in the given
        district.
      operationId: getDistrictTeamsKeys
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: district_key
        in: path
        description: "TBA District Key, eg `2016fim`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                description: Array of Team Keys
                items:
                  type: string
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /district/{district_key}/rankings:
    get:
      tags:
      - district
      - team
      - list
      description: Gets a list of team district rankings for the given district.
      operationId: getDistrictRankings
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: district_key
        in: path
        description: "TBA District Key, eg `2016fim`"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                nullable: true
                items:
                  $ref: "#/components/schemas/District_Ranking"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /regional_advancement/{year}/rankings:
    get:
      tags:
      - regional_advancement
      - list
      description: Gets the team rankings in the regional pool for a specific year.
      operationId: getRegionalRankings
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: path
        description: Competition Year (or Season). Must be 4 digits.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                nullable: true
                items:
                  $ref: "#/components/schemas/Regional_Ranking"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /insights/leaderboards/{year}:
    get:
      tags:
      - insight
      - list
      description: Gets a list of `LeaderboardInsight` objects from a specific year.
        Use year=0 for overall.
      operationId: getInsightsLeaderboardsYear
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: path
        description: Competition Year (or Season). Must be 4 digits.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LeaderboardInsight"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /insights/notables/{year}:
    get:
      tags:
      - insight
      - list
      description: Gets a list of `NotablesInsight` objects from a specific year.
        Use year=0 for overall.
      operationId: getInsightsNotablesYear
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: path
        description: Competition Year (or Season). Must be 4 digits.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NotablesInsight"
                x-content-type: application/json
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
  /search_index:
    get:
      tags: []
      description: Gets a large blob of data that is used on the frontend for searching.
        May change without notice.
      operationId: getSearchIndex
      parameters:
      - name: If-None-Match
        in: header
        description: Value of the `ETag` header in the most recently cached response
          by the client.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          headers:
            Cache-Control:
              description: "The `Cache-Control` header, in particular the `max-age`\
                \ value, contains the number of seconds the result should be considered\
                \ valid for. During this time subsequent calls should return from\
                \ the local cache directly."
              style: simple
              explode: false
              schema:
                type: string
            ETag:
              description: Specifies the version of the most recent response. Used
                by clients in the `If-None-Match` request header.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchIndex"
        "304":
          description: Not Modified - Use Local Cached Value
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
        "404":
          description: Not Found
      security:
      - apiKey: []
components:
  schemas:
    API_Status:
      required:
      - android
      - current_season
      - down_events
      - ios
      - is_datafeed_down
      - max_season
      type: object
      properties:
        current_season:
          type: integer
          description: Year of the current FRC season.
        max_season:
          type: integer
          description: Maximum FRC season year for valid queries.
        is_datafeed_down:
          type: boolean
          description: True if the entire FMS API provided by FIRST is down.
        down_events:
          type: array
          description: An array of strings containing event keys of any active events
            that are no longer updating.
          items:
            type: string
        ios:
          $ref: "#/components/schemas/API_Status_App_Version"
        android:
          $ref: "#/components/schemas/API_Status_App_Version"
      example:
        is_datafeed_down: true
        down_events:
        - down_events
        - down_events
        max_season: 6
        current_season: 0
        android: null
        ios:
          min_app_version: 1
          latest_app_version: 5
    API_Status_App_Version:
      required:
      - latest_app_version
      - min_app_version
      type: object
      properties:
        min_app_version:
          type: integer
          description: Internal use - Minimum application version required to correctly
            connect and process data.
        latest_app_version:
          type: integer
          description: Internal use - Latest application version available.
      example:
        min_app_version: 1
        latest_app_version: 5
    Team_Simple:
      required:
      - city
      - country
      - key
      - name
      - nickname
      - state_prov
      - team_number
      type: object
      properties:
        key:
          type: string
          description: TBA team key with the format `frcXXXX` with `XXXX` representing
            the team number.
        team_number:
          type: integer
          description: Official team number issued by FIRST.
        nickname:
          type: string
          description: Team nickname provided by FIRST.
        name:
          type: string
          description: Official long name registered with FIRST.
        city:
          type: string
          description: City of team derived from parsing the address registered with
            FIRST.
          nullable: true
        state_prov:
          type: string
          description: State of team derived from parsing the address registered with
            FIRST.
          nullable: true
        country:
          type: string
          description: Country of team derived from parsing the address registered
            with FIRST.
          nullable: true
      example:
        country: country
        city: city
        nickname: nickname
        name: name
        team_number: 0
        state_prov: state_prov
        key: key
    Team:
      required:
      - address
      - city
      - country
      - gmaps_place_id
      - gmaps_url
      - key
      - lat
      - lng
      - location_name
      - name
      - nickname
      - postal_code
      - rookie_year
      - school_name
      - state_prov
      - team_number
      type: object
      properties:
        key:
          type: string
          description: TBA team key with the format `frcXXXX` with `XXXX` representing
            the team number.
        team_number:
          type: integer
          description: Official team number issued by FIRST.
        nickname:
          type: string
          description: Team nickname provided by FIRST.
        name:
          type: string
          description: Official long name registered with FIRST.
        school_name:
          type: string
          description: Name of team school or affilited group registered with FIRST.
          nullable: true
        city:
          type: string
          description: City of team derived from parsing the address registered with
            FIRST.
          nullable: true
        state_prov:
          type: string
          description: State of team derived from parsing the address registered with
            FIRST.
          nullable: true
        country:
          type: string
          description: Country of team derived from parsing the address registered
            with FIRST.
          nullable: true
        address:
          type: string
          description: "Will be NULL, for future development."
          nullable: true
        postal_code:
          type: string
          description: Postal code from the team address.
          nullable: true
        gmaps_place_id:
          type: string
          description: "Will be NULL, for future development."
          nullable: true
        gmaps_url:
          type: string
          description: "Will be NULL, for future development."
          format: url
          nullable: true
        lat:
          type: number
          description: "Will be NULL, for future development."
          format: double
          nullable: true
        lng:
          type: number
          description: "Will be NULL, for future development."
          format: double
          nullable: true
        location_name:
          type: string
          description: "Will be NULL, for future development."
          nullable: true
        website:
          type: string
          description: Official website associated with the team.
          format: url
          nullable: true
        rookie_year:
          type: integer
          description: First year the team officially competed.
          nullable: true
      example:
        country: country
        website: http://example.com/aeiou
        address: address
        lng: 1.4658129805029452
        city: city
        gmaps_place_id: gmaps_place_id
        school_name: school_name
        gmaps_url: http://example.com/aeiou
        location_name: location_name
        rookie_year: 5
        nickname: nickname
        name: name
        team_number: 0
        state_prov: state_prov
        postal_code: postal_code
        key: key
        lat: 6.027456183070403
    Team_Robot:
      required:
      - key
      - robot_name
      - team_key
      - year
      type: object
      properties:
        year:
          type: integer
          description: Year this robot competed in.
        robot_name:
          type: string
          description: Name of the robot as provided by the team.
        key:
          type: string
          description: Internal TBA identifier for this robot.
        team_key:
          type: string
          description: TBA team key for this robot.
      example:
        year: 0
        robot_name: robot_name
        team_key: team_key
        key: key
    Event_Simple:
      required:
      - city
      - country
      - district
      - end_date
      - event_code
      - event_type
      - key
      - name
      - start_date
      - state_prov
      - year
      type: object
      properties:
        key:
          type: string
          description: "TBA event key with the format yyyy[EVENT_CODE], where yyyy\
            \ is the year, and EVENT_CODE is the event code of the event."
        name:
          type: string
          description: Official name of event on record either provided by FIRST or
            organizers of offseason event.
        event_code:
          type: string
          description: "Event short code, as provided by FIRST."
        event_type:
          type: integer
          description: "Event Type, as defined here: https://github.com/the-blue-alliance/the-blue-alliance/blob/master/consts/event_type.py#L2"
        district:
          anyOf:
          - $ref: "#/components/schemas/District_List"
          - type: "null"
        city:
          type: string
          description: "City, town, village, etc. the event is located in."
          nullable: true
        state_prov:
          type: string
          description: State or Province the event is located in.
          nullable: true
        country:
          type: string
          description: Country the event is located in.
          nullable: true
        start_date:
          type: string
          description: Event start date in `yyyy-mm-dd` format.
          format: date
        end_date:
          type: string
          description: Event end date in `yyyy-mm-dd` format.
          format: date
        year:
          type: integer
          description: Year the event data is for.
      example:
        end_date: 2000-01-23
        country: country
        event_type: 0
        city: city
        year: 6
        event_code: event_code
        district: ""
        name: name
        state_prov: state_prov
        key: key
        start_date: 2000-01-23
    Event:
      required:
      - address
      - city
      - country
      - district
      - division_keys
      - end_date
      - event_code
      - event_type
      - event_type_string
      - first_event_code
      - first_event_id
      - gmaps_place_id
      - gmaps_url
      - key
      - lat
      - lng
      - location_name
      - name
      - parent_event_key
      - playoff_type
      - playoff_type_string
      - postal_code
      - short_name
      - start_date
      - state_prov
      - timezone
      - webcasts
      - website
      - week
      - year
      type: object
      properties:
        key:
          type: string
          description: "TBA event key with the format yyyy[EVENT_CODE], where yyyy\
            \ is the year, and EVENT_CODE is the event code of the event."
        name:
          type: string
          description: Official name of event on record either provided by FIRST or
            organizers of offseason event.
        event_code:
          type: string
          description: "Event short code, as provided by FIRST."
        event_type:
          type: integer
          description: "Event Type, as defined here: https://github.com/the-blue-alliance/the-blue-alliance/blob/master/consts/event_type.py#L2"
        district:
          anyOf:
          - $ref: "#/components/schemas/District_List"
          - type: "null"
        city:
          type: string
          description: "City, town, village, etc. the event is located in."
          nullable: true
        state_prov:
          type: string
          description: State or Province the event is located in.
          nullable: true
        country:
          type: string
          description: Country the event is located in.
          nullable: true
        start_date:
          type: string
          description: Event start date in `yyyy-mm-dd` format.
          format: date
        end_date:
          type: string
          description: Event end date in `yyyy-mm-dd` format.
          format: date
        year:
          type: integer
          description: Year the event data is for.
        short_name:
          type: string
          description: "Same as `name` but doesn't include event specifiers, such\
            \ as 'Regional' or 'District'. May be null."
          nullable: true
        event_type_string:
          type: string
          description: "Event Type, eg Regional, District, or Offseason."
        week:
          type: integer
          description: "Week of the event relative to the first official season event,\
            \ zero-indexed. Only valid for Regionals, Districts, and District Championships.\
            \ Null otherwise. (Eg. A season with a week 0 'preseason' event does not\
            \ count, and week 1 events will show 0 here. Seasons with a week 0.5 regional\
            \ event will show week 0 for those event(s) and week 1 for week 1 events\
            \ and so on.)"
          nullable: true
        address:
          type: string
          description: "Address of the event's venue, if available."
          nullable: true
        postal_code:
          type: string
          description: Postal code from the event address.
          nullable: true
        gmaps_place_id:
          type: string
          description: Google Maps Place ID for the event address.
          nullable: true
        gmaps_url:
          type: string
          description: Link to address location on Google Maps.
          format: url
          nullable: true
        lat:
          type: number
          description: Latitude for the event address.
          format: double
          nullable: true
        lng:
          type: number
          description: Longitude for the event address.
          format: double
          nullable: true
        location_name:
          type: string
          description: "Name of the location at the address for the event, eg. Blue\
            \ Alliance High School."
          nullable: true
        timezone:
          type: string
          description: Timezone name.
        website:
          type: string
          description: "The event's website, if any."
          nullable: true
        first_event_id:
          type: string
          description: "The FIRST internal Event ID, used to link to the event on\
            \ the FRC webpage."
          nullable: true
        first_event_code:
          type: string
          description: "Public facing event code used by FIRST (on frc-events.firstinspires.org,\
            \ for example)"
          nullable: true
        webcasts:
          type: array
          items:
            $ref: "#/components/schemas/Webcast"
        division_keys:
          type: array
          description: An array of event keys for the divisions at this event.
          items:
            type: string
        parent_event_key:
          type: string
          description: The TBA Event key that represents the event's parent. Used
            to link back to the event from a division event. It is also the inverse
            relation of `divison_keys`.
          nullable: true
        playoff_type:
          type: integer
          description: "Playoff Type, as defined here: https://github.com/the-blue-alliance/the-blue-alliance/blob/master/consts/playoff_type.py#L4,\
            \ or null."
          nullable: true
        playoff_type_string:
          type: string
          description: "String representation of the `playoff_type`, or null."
          nullable: true
      example:
        end_date: 2000-01-23
        country: country
        week: 1
        playoff_type: 2
        city: city
        year: 6
        timezone: timezone
        event_type: 0
        event_code: event_code
        playoff_type_string: playoff_type_string
        event_type_string: event_type_string
        webcasts:
        - date: date
          file: file
          channel: channel
          type: youtube
        - date: date
          file: file
          channel: channel
          type: youtube
        key: key
        lat: 5.962133916683182
        start_date: 2000-01-23
        first_event_code: first_event_code
        parent_event_key: parent_event_key
        website: website
        division_keys:
        - division_keys
        - division_keys
        address: address
        lng: 5.637376656633329
        gmaps_place_id: gmaps_place_id
        gmaps_url: http://example.com/aeiou
        location_name: location_name
        district: ""
        name: name
        state_prov: state_prov
        short_name: short_name
        first_event_id: first_event_id
        postal_code: postal_code
    Team_Event_Status:
      type: object
      properties:
        qual:
          anyOf:
          - $ref: "#/components/schemas/Team_Event_Status_rank"
          - type: "null"
        alliance:
          anyOf:
          - $ref: "#/components/schemas/Team_Event_Status_alliance"
          - type: "null"
        playoff:
          anyOf:
          - $ref: "#/components/schemas/Team_Event_Status_playoff"
          - type: "null"
        alliance_status_str:
          type: string
          description: An HTML formatted string suitable for display to the user containing
            the team's alliance pick status.
        playoff_status_str:
          type: string
          description: An HTML formatter string suitable for display to the user containing
            the team's playoff status.
        overall_status_str:
          type: string
          description: An HTML formatted string suitable for display to the user containing
            the team's overall status summary of the event.
        next_match_key:
          type: string
          description: "TBA match key for the next match the team is scheduled to\
            \ play in at this event, or null."
          nullable: true
        last_match_key:
          type: string
          description: "TBA match key for the last match the team played in at this\
            \ event, or null."
          nullable: true
    Team_Event_Status_rank:
      type: object
      properties:
        num_teams:
          type: integer
          description: Number of teams ranked.
        ranking:
          $ref: "#/components/schemas/Team_Event_Status_rank_ranking"
        sort_order_info:
          type: array
          description: Ordered list of names corresponding to the elements of the
            `sort_orders` array.
          items:
            $ref: "#/components/schemas/Team_Event_Status_rank_sort_order_info"
        status:
          type: string
    Team_Event_Status_alliance:
      required:
      - number
      - pick
      type: object
      properties:
        name:
          type: string
          description: "Alliance name, may be null."
          nullable: true
        number:
          type: integer
          description: Alliance number.
        backup:
          $ref: "#/components/schemas/Team_Event_Status_alliance_backup"
        pick:
          type: integer
          description: "Order the team was picked in the alliance from 0-2, with 0\
            \ being alliance captain."
    Team_Event_Status_alliance_backup:
      type: object
      properties:
        out:
          type: string
          description: TBA key for the team replaced by the backup.
        in:
          type: string
          description: TBA key for the backup team called in.
      description: "Backup status, may be null."
      nullable: true
    Team_Event_Status_playoff:
      type: object
      properties:
        level:
          type: string
          description: The highest playoff level the team reached.
          enum:
          - qm
          - ef
          - qf
          - sf
          - f
        current_level_record:
          anyOf:
          - $ref: "#/components/schemas/WLT_Record"
          - type: "null"
        record:
          anyOf:
          - $ref: "#/components/schemas/WLT_Record"
          - type: "null"
        status:
          type: string
          description: Current competition status for the playoffs.
          enum:
          - won
          - eliminated
          - playing
        playoff_average:
          type: number
          description: The average match score during playoffs. Year specific. May
            be null if not relevant for a given year.
          format: double
          nullable: true
      description: "Playoff status for this team, may be null if the team did not\
        \ make playoffs, or playoffs have not begun."
      nullable: true
    Event_Ranking:
      required:
      - extra_stats_info
      - rankings
      - sort_order_info
      type: object
      properties:
        rankings:
          type: array
          description: List of rankings at the event.
          items:
            $ref: "#/components/schemas/Event_Ranking_rankings"
        extra_stats_info:
          type: array
          description: List of special TBA-generated values provided in the `extra_stats`
            array for each item.
          items:
            $ref: "#/components/schemas/Event_Ranking_extra_stats_info"
        sort_order_info:
          type: array
          description: List of year-specific values provided in the `sort_orders`
            array for each team.
          items:
            $ref: "#/components/schemas/Event_Ranking_sort_order_info"
    Event_District_Points:
      required:
      - points
      type: object
      properties:
        points:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Event_District_Points_points"
          description: "Points gained for each team at the event. Stored as a key-value\
            \ pair with the team key as the key, and an object describing the points\
            \ as its value."
        tiebreakers:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Event_District_Points_tiebreakers"
          description: "Tiebreaker values for each team at the event. Stored as a\
            \ key-value pair with the team key as the key, and an object describing\
            \ the tiebreaker elements as its value."
    Event_Insights:
      type: object
      properties:
        qual:
          type: object
          properties: {}
          description: Inights for the qualification round of an event
        playoff:
          type: object
          properties: {}
          description: Insights for the playoff round of an event
      description: "A year-specific event insight object expressed as a JSON string,\
        \ separated in to `qual` and `playoff` fields. See also Event_Insights_2016,\
        \ Event_Insights_2017, etc."
    Event_Insights_2016:
      required:
      - A_ChevalDeFrise
      - A_Portcullis
      - B_Moat
      - B_Ramparts
      - C_Drawbridge
      - C_SallyPort
      - D_RockWall
      - D_RoughTerrain
      - LowBar
      - average_auto_score
      - average_boulder_score
      - average_crossing_score
      - average_foul_score
      - average_high_goals
      - average_low_goals
      - average_score
      - average_tower_score
      - average_win_margin
      - average_win_score
      - breaches
      - captures
      - challenges
      - high_score
      - scales
      type: object
      properties:
        LowBar:
          type: array
          description: "For the Low Bar - An array with three values, number of times\
            \ damaged, number of opportunities to damage, and percentage."
          items:
            type: number
            format: float
        A_ChevalDeFrise:
          type: array
          description: "For the Cheval De Frise - An array with three values, number\
            \ of times damaged, number of opportunities to damage, and percentage."
          items:
            type: number
            format: float
        A_Portcullis:
          type: array
          description: "For the Portcullis - An array with three values, number of\
            \ times damaged, number of opportunities to damage, and percentage."
          items:
            type: number
            format: float
        B_Ramparts:
          type: array
          description: "For the Ramparts - An array with three values, number of times\
            \ damaged, number of opportunities to damage, and percentage."
          items:
            type: number
            format: float
        B_Moat:
          type: array
          description: "For the Moat - An array with three values, number of times\
            \ damaged, number of opportunities to damage, and percentage."
          items:
            type: number
            format: float
        C_SallyPort:
          type: array
          description: "For the Sally Port - An array with three values, number of\
            \ times damaged, number of opportunities to damage, and percentage."
          items:
            type: number
            format: float
        C_Drawbridge:
          type: array
          description: "For the Drawbridge - An array with three values, number of\
            \ times damaged, number of opportunities to damage, and percentage."
          items:
            type: number
            format: float
        D_RoughTerrain:
          type: array
          description: "For the Rough Terrain - An array with three values, number\
            \ of times damaged, number of opportunities to damage, and percentage."
          items:
            type: number
            format: float
        D_RockWall:
          type: array
          description: "For the Rock Wall - An array with three values, number of\
            \ times damaged, number of opportunities to damage, and percentage."
          items:
            type: number
            format: float
        average_high_goals:
          type: number
          description: Average number of high goals scored.
          format: float
        average_low_goals:
          type: number
          description: Average number of low goals scored.
          format: float
        breaches:
          type: array
          description: "An array with three values, number of times breached, number\
            \ of opportunities to breach, and percentage."
          items:
            type: number
            format: float
        scales:
          type: array
          description: "An array with three values, number of times scaled, number\
            \ of opportunities to scale, and percentage."
          items:
            type: number
            format: float
        challenges:
          type: array
          description: "An array with three values, number of times challenged, number\
            \ of opportunities to challenge, and percentage."
          items:
            type: number
            format: float
        captures:
          type: array
          description: "An array with three values, number of times captured, number\
            \ of opportunities to capture, and percentage."
          items:
            type: number
            format: float
        average_win_score:
          type: number
          description: Average winning score.
          format: float
        average_win_margin:
          type: number
          description: Average margin of victory.
          format: float
        average_score:
          type: number
          description: Average total score.
          format: float
        average_auto_score:
          type: number
          description: Average autonomous score.
          format: float
        average_crossing_score:
          type: number
          description: Average crossing score.
          format: float
        average_boulder_score:
          type: number
          description: Average boulder score.
          format: float
        average_tower_score:
          type: number
          description: Average tower score.
          format: float
        average_foul_score:
          type: number
          description: Average foul score.
          format: float
        high_score:
          type: array
          description: "An array with three values, high score, match key from the\
            \ match with the high score, and the name of the match."
          items:
            type: string
      description: Insights for FIRST Stronghold qualification and elimination matches.
    Event_Insights_2017:
      required:
      - average_foul_score
      - average_fuel_points
      - average_fuel_points_auto
      - average_fuel_points_teleop
      - average_high_goals
      - average_high_goals_auto
      - average_high_goals_teleop
      - average_low_goals
      - average_low_goals_auto
      - average_low_goals_teleop
      - average_mobility_points_auto
      - average_points_auto
      - average_points_teleop
      - average_rotor_points
      - average_rotor_points_auto
      - average_rotor_points_teleop
      - average_score
      - average_takeoff_points_teleop
      - average_win_margin
      - average_win_score
      - high_kpa
      - high_score
      - kpa_achieved
      - mobility_counts
      - rotor_1_engaged
      - rotor_1_engaged_auto
      - rotor_2_engaged
      - rotor_2_engaged_auto
      - rotor_3_engaged
      - rotor_4_engaged
      - takeoff_counts
      - unicorn_matches
      type: object
      properties:
        average_foul_score:
          type: number
          description: Average foul score.
          format: float
        average_fuel_points:
          type: number
          description: Average fuel points scored.
          format: float
        average_fuel_points_auto:
          type: number
          description: Average fuel points scored during auto.
          format: float
        average_fuel_points_teleop:
          type: number
          description: Average fuel points scored during teleop.
          format: float
        average_high_goals:
          type: number
          description: Average points scored in the high goal.
          format: float
        average_high_goals_auto:
          type: number
          description: Average points scored in the high goal during auto.
          format: float
        average_high_goals_teleop:
          type: number
          description: Average points scored in the high goal during teleop.
          format: float
        average_low_goals:
          type: number
          description: Average points scored in the low goal.
          format: float
        average_low_goals_auto:
          type: number
          description: Average points scored in the low goal during auto.
          format: float
        average_low_goals_teleop:
          type: number
          description: Average points scored in the low goal during teleop.
          format: float
        average_mobility_points_auto:
          type: number
          description: Average mobility points scored during auto.
          format: float
        average_points_auto:
          type: number
          description: Average points scored during auto.
          format: float
        average_points_teleop:
          type: number
          description: Average points scored during teleop.
          format: float
        average_rotor_points:
          type: number
          description: Average rotor points scored.
          format: float
        average_rotor_points_auto:
          type: number
          description: Average rotor points scored during auto.
          format: float
        average_rotor_points_teleop:
          type: number
          description: Average rotor points scored during teleop.
          format: float
        average_score:
          type: number
          description: Average score.
          format: float
        average_takeoff_points_teleop:
          type: number
          description: Average takeoff points scored during teleop.
          format: float
        average_win_margin:
          type: number
          description: Average margin of victory.
          format: float
        average_win_score:
          type: number
          description: Average winning score.
          format: float
        high_kpa:
          type: array
          description: "An array with three values, kPa scored, match key from the\
            \ match with the high kPa, and the name of the match"
          items:
            type: string
        high_score:
          type: array
          description: "An array with three values, high score, match key from the\
            \ match with the high score, and the name of the match"
          items:
            type: string
        kpa_achieved:
          type: array
          description: "An array with three values, number of times kPa bonus achieved,\
            \ number of opportunities to bonus, and percentage."
          items:
            type: number
            format: float
        mobility_counts:
          type: array
          description: "An array with three values, number of times mobility bonus\
            \ achieved, number of opportunities to bonus, and percentage."
          items:
            type: number
            format: float
        rotor_1_engaged:
          type: array
          description: "An array with three values, number of times rotor 1 engaged,\
            \ number of opportunities to engage, and percentage."
          items:
            type: number
            format: float
        rotor_1_engaged_auto:
          type: array
          description: "An array with three values, number of times rotor 1 engaged\
            \ in auto, number of opportunities to engage in auto, and percentage."
          items:
            type: number
            format: float
        rotor_2_engaged:
          type: array
          description: "An array with three values, number of times rotor 2 engaged,\
            \ number of opportunities to engage, and percentage."
          items:
            type: number
            format: float
        rotor_2_engaged_auto:
          type: array
          description: "An array with three values, number of times rotor 2 engaged\
            \ in auto, number of opportunities to engage in auto, and percentage."
          items:
            type: number
            format: float
        rotor_3_engaged:
          type: array
          description: "An array with three values, number of times rotor 3 engaged,\
            \ number of opportunities to engage, and percentage."
          items:
            type: number
            format: float
        rotor_4_engaged:
          type: array
          description: "An array with three values, number of times rotor 4 engaged,\
            \ number of opportunities to engage, and percentage."
          items:
            type: number
            format: float
        takeoff_counts:
          type: array
          description: "An array with three values, number of times takeoff was counted,\
            \ number of opportunities to takeoff, and percentage."
          items:
            type: number
            format: float
        unicorn_matches:
          type: array
          description: "An array with three values, number of times a unicorn match\
            \ (Win + kPa & Rotor Bonuses) occured, number of opportunities to have\
            \ a unicorn match, and percentage."
          items:
            type: number
            format: float
      description: Insights for FIRST STEAMWORKS qualification and elimination matches.
    Event_Insights_2018:
      required:
      - auto_quest_achieved
      - average_boost_played
      - average_endgame_points
      - average_force_played
      - average_foul_score
      - average_points_auto
      - average_points_teleop
      - average_run_points_auto
      - average_scale_ownership_points
      - average_scale_ownership_points_auto
      - average_scale_ownership_points_teleop
      - average_score
      - average_switch_ownership_points
      - average_switch_ownership_points_auto
      - average_switch_ownership_points_teleop
      - average_vault_points
      - average_win_margin
      - average_win_score
      - boost_played_counts
      - climb_counts
      - face_the_boss_achieved
      - force_played_counts
      - high_score
      - levitate_played_counts
      - run_counts_auto
      - scale_neutral_percentage
      - scale_neutral_percentage_auto
      - scale_neutral_percentage_teleop
      - switch_owned_counts_auto
      - unicorn_matches
      - winning_opp_switch_denial_percentage_teleop
      - winning_own_switch_ownership_percentage
      - winning_own_switch_ownership_percentage_auto
      - winning_own_switch_ownership_percentage_teleop
      - winning_scale_ownership_percentage
      - winning_scale_ownership_percentage_auto
      - winning_scale_ownership_percentage_teleop
      type: object
      properties:
        auto_quest_achieved:
          type: array
          description: "An array with three values, number of times auto quest was\
            \ completed, number of opportunities to complete the auto quest, and percentage."
          items:
            type: number
            format: float
        average_boost_played:
          type: number
          description: Average number of boost power up scored (out of 3).
          format: float
        average_endgame_points:
          type: number
          description: Average endgame points.
          format: float
        average_force_played:
          type: number
          description: Average number of force power up scored (out of 3).
          format: float
        average_foul_score:
          type: number
          description: Average foul score.
          format: float
        average_points_auto:
          type: number
          description: Average points scored during auto.
          format: float
        average_points_teleop:
          type: number
          description: Average points scored during teleop.
          format: float
        average_run_points_auto:
          type: number
          description: Average mobility points scored during auto.
          format: float
        average_scale_ownership_points:
          type: number
          description: Average scale ownership points scored.
          format: float
        average_scale_ownership_points_auto:
          type: number
          description: Average scale ownership points scored during auto.
          format: float
        average_scale_ownership_points_teleop:
          type: number
          description: Average scale ownership points scored during teleop.
          format: float
        average_score:
          type: number
          description: Average score.
          format: float
        average_switch_ownership_points:
          type: number
          description: Average switch ownership points scored.
          format: float
        average_switch_ownership_points_auto:
          type: number
          description: Average switch ownership points scored during auto.
          format: float
        average_switch_ownership_points_teleop:
          type: number
          description: Average switch ownership points scored during teleop.
          format: float
        average_vault_points:
          type: number
          description: Average value points scored.
          format: float
        average_win_margin:
          type: number
          description: Average margin of victory.
          format: float
        average_win_score:
          type: number
          description: Average winning score.
          format: float
        boost_played_counts:
          type: array
          description: "An array with three values, number of times a boost power\
            \ up was played, number of opportunities to play a boost power up, and\
            \ percentage."
          items:
            type: number
            format: float
        climb_counts:
          type: array
          description: "An array with three values, number of times a climb occurred,\
            \ number of opportunities to climb, and percentage."
          items:
            type: number
            format: float
        face_the_boss_achieved:
          type: array
          description: "An array with three values, number of times an alliance faced\
            \ the boss, number of opportunities to face the boss, and percentage."
          items:
            type: number
            format: float
        force_played_counts:
          type: array
          description: "An array with three values, number of times a force power\
            \ up was played, number of opportunities to play a force power up, and\
            \ percentage."
          items:
            type: number
            format: float
        high_score:
          type: array
          description: "An array with three values, high score, match key from the\
            \ match with the high score, and the name of the match"
          items:
            type: string
        levitate_played_counts:
          type: array
          description: "An array with three values, number of times a levitate power\
            \ up was played, number of opportunities to play a levitate power up,\
            \ and percentage."
          items:
            type: number
            format: float
        run_counts_auto:
          type: array
          description: "An array with three values, number of times a team scored\
            \ mobility points in auto, number of opportunities to score mobility points\
            \ in auto, and percentage."
          items:
            type: number
            format: float
        scale_neutral_percentage:
          type: number
          description: Average scale neutral percentage.
          format: float
        scale_neutral_percentage_auto:
          type: number
          description: Average scale neutral percentage during auto.
          format: float
        scale_neutral_percentage_teleop:
          type: number
          description: Average scale neutral percentage during teleop.
          format: float
        switch_owned_counts_auto:
          type: array
          description: "An array with three values, number of times a switch was owned\
            \ during auto, number of opportunities to own a switch during auto, and\
            \ percentage."
          items:
            type: number
            format: float
        unicorn_matches:
          type: array
          description: "An array with three values, number of times a unicorn match\
            \ (Win + Auto Quest + Face the Boss) occurred, number of opportunities\
            \ to have a unicorn match, and percentage."
          items:
            type: number
            format: float
        winning_opp_switch_denial_percentage_teleop:
          type: number
          description: Average opposing switch denail percentage for the winning alliance
            during teleop.
          format: float
        winning_own_switch_ownership_percentage:
          type: number
          description: Average own switch ownership percentage for the winning alliance.
          format: float
        winning_own_switch_ownership_percentage_auto:
          type: number
          description: Average own switch ownership percentage for the winning alliance
            during auto.
          format: float
        winning_own_switch_ownership_percentage_teleop:
          type: number
          description: Average own switch ownership percentage for the winning alliance
            during teleop.
          format: float
        winning_scale_ownership_percentage:
          type: number
          description: Average scale ownership percentage for the winning alliance.
          format: float
        winning_scale_ownership_percentage_auto:
          type: number
          description: Average scale ownership percentage for the winning alliance
            during auto.
          format: float
        winning_scale_ownership_percentage_teleop:
          type: number
          description: Average scale ownership percentage for the winning alliance
            during teleop.
          format: float
      description: Insights for FIRST Power Up qualification and elimination matches.
    Event_OPRs:
      type: object
      properties:
        oprs:
          type: object
          additionalProperties:
            type: number
            description: OPR for team.
            format: float
          description: A key-value pair with team key (eg `frc254`) as key and OPR
            as value.
        dprs:
          type: object
          additionalProperties:
            type: number
            description: DPR for team.
            format: float
          description: A key-value pair with team key (eg `frc254`) as key and DPR
            as value.
        ccwms:
          type: object
          additionalProperties:
            type: number
            description: CCWM for team.
            format: float
          description: A key-value pair with team key (eg `frc254`) as key and CCWM
            as value.
      description: "OPR, DPR, and CCWM for teams at the event."
    Event_COPRs:
      type: object
      additionalProperties:
        type: object
        additionalProperties:
          type: number
        description: A key-value pair with team key (eg `frc254`) as key and CCWM
          as value.
      description: Component OPRs for teams at the event.
    Event_Predictions:
      type: object
      description: JSON Object containing prediction information for the event. Contains
        year-specific information and is subject to change.
    Match_Simple:
      required:
      - actual_time
      - alliances
      - comp_level
      - event_key
      - key
      - match_number
      - predicted_time
      - set_number
      - time
      - winning_alliance
      type: object
      properties:
        key:
          type: string
          description: "TBA match key with the format `yyyy[EVENT_CODE]_[COMP_LEVEL]m[MATCH_NUMBER]`,\
            \ where `yyyy` is the year, and `EVENT_CODE` is the event code of the\
            \ event, `COMP_LEVEL` is (qm, ef, qf, sf, f), and `MATCH_NUMBER` is the\
            \ match number in the competition level. A set number may append the competition\
            \ level if more than one match in required per set."
        comp_level:
          type: string
          description: The competition level the match was played at.
          enum:
          - qm
          - ef
          - qf
          - sf
          - f
        set_number:
          type: integer
          description: The set number in a series of matches where more than one match
            is required in the match series.
        match_number:
          type: integer
          description: The match number of the match in the competition level.
        alliances:
          $ref: "#/components/schemas/Match_Simple_alliances"
        winning_alliance:
          type: string
          description: "The color (red/blue) of the winning alliance. Will contain\
            \ an empty string in the event of no winner, or a tie."
          enum:
          - red
          - blue
          - ""
        event_key:
          type: string
          description: Event key of the event the match was played at.
        time:
          type: integer
          description: "UNIX timestamp (seconds since 1-Jan-1970 00:00:00) of the\
            \ scheduled match time, as taken from the published schedule."
          format: int64
          nullable: true
        predicted_time:
          type: integer
          description: UNIX timestamp (seconds since 1-Jan-1970 00:00:00) of the TBA
            predicted match start time.
          format: int64
          nullable: true
        actual_time:
          type: integer
          description: UNIX timestamp (seconds since 1-Jan-1970 00:00:00) of actual
            match start time.
          format: int64
          nullable: true
      example:
        predicted_time: 5
        set_number: 0
        alliances:
          red:
            score: 1
            team_keys:
            - team_keys
            - team_keys
            surrogate_team_keys:
            - surrogate_team_keys
            - surrogate_team_keys
            dq_team_keys:
            - dq_team_keys
            - dq_team_keys
          blue: null
        winning_alliance: red
        time: 1
        actual_time: 5
        key: key
        comp_level: qm
        event_key: event_key
        match_number: 6
    Match:
      required:
      - actual_time
      - alliances
      - comp_level
      - event_key
      - key
      - match_number
      - post_result_time
      - predicted_time
      - score_breakdown
      - set_number
      - time
      - videos
      - winning_alliance
      type: object
      properties:
        key:
          type: string
          description: "TBA match key with the format `yyyy[EVENT_CODE]_[COMP_LEVEL]m[MATCH_NUMBER]`,\
            \ where `yyyy` is the year, and `EVENT_CODE` is the event code of the\
            \ event, `COMP_LEVEL` is (qm, ef, qf, sf, f), and `MATCH_NUMBER` is the\
            \ match number in the competition level. A set number may be appended\
            \ to the competition level if more than one match in required per set."
        comp_level:
          type: string
          description: The competition level the match was played at.
          enum:
          - qm
          - ef
          - qf
          - sf
          - f
        set_number:
          type: integer
          description: The set number in a series of matches where more than one match
            is required in the match series.
        match_number:
          type: integer
          description: The match number of the match in the competition level.
        alliances:
          $ref: "#/components/schemas/Match_Simple_alliances"
        winning_alliance:
          type: string
          description: "The color (red/blue) of the winning alliance. Will contain\
            \ an empty string in the event of no winner, or a tie."
          enum:
          - red
          - blue
          - ""
        event_key:
          type: string
          description: Event key of the event the match was played at.
        time:
          type: integer
          description: "UNIX timestamp (seconds since 1-Jan-1970 00:00:00) of the\
            \ scheduled match time, as taken from the published schedule."
          format: int64
          nullable: true
        actual_time:
          type: integer
          description: UNIX timestamp (seconds since 1-Jan-1970 00:00:00) of actual
            match start time.
          format: int64
          nullable: true
        predicted_time:
          type: integer
          description: UNIX timestamp (seconds since 1-Jan-1970 00:00:00) of the TBA
            predicted match start time.
          format: int64
          nullable: true
        post_result_time:
          type: integer
          description: UNIX timestamp (seconds since 1-Jan-1970 00:00:00) when the
            match result was posted.
          format: int64
          nullable: true
        score_breakdown:
          description: "Score breakdown for auto, teleop, etc. points. Varies from\
            \ year to year. May be null."
          nullable: true
          oneOf:
          - $ref: "#/components/schemas/Match_Score_Breakdown_2015"
          - $ref: "#/components/schemas/Match_Score_Breakdown_2016"
          - $ref: "#/components/schemas/Match_Score_Breakdown_2017"
          - $ref: "#/components/schemas/Match_Score_Breakdown_2018"
          - $ref: "#/components/schemas/Match_Score_Breakdown_2019"
          - $ref: "#/components/schemas/Match_Score_Breakdown_2020"
          - $ref: "#/components/schemas/Match_Score_Breakdown_2022"
          - $ref: "#/components/schemas/Match_Score_Breakdown_2023"
          - $ref: "#/components/schemas/Match_Score_Breakdown_2024"
          - $ref: "#/components/schemas/Match_Score_Breakdown_2025"
        videos:
          type: array
          description: Array of video objects associated with this match.
          items:
            $ref: "#/components/schemas/Match_videos"
      example:
        predicted_time: 2
        set_number: 0
        videos:
        - type: type
          key: key
        - type: type
          key: key
        winning_alliance: red
        actual_time: 5
        post_result_time: 7
        match_number: 6
        score_breakdown: ""
        alliances:
          red:
            score: 1
            team_keys:
            - team_keys
            - team_keys
            surrogate_team_keys:
            - surrogate_team_keys
            - surrogate_team_keys
            dq_team_keys:
            - dq_team_keys
            - dq_team_keys
          blue: null
        time: 5
        key: key
        comp_level: qm
        event_key: event_key
    Match_alliance:
      required:
      - dq_team_keys
      - score
      - surrogate_team_keys
      - team_keys
      type: object
      properties:
        score:
          type: integer
          description: Score for this alliance. Will be null or -1 for an unplayed
            match.
        team_keys:
          type: array
          items:
            type: string
            description: TBA Team keys (eg `frc254`) for teams on this alliance.
        surrogate_team_keys:
          type: array
          description: TBA team keys (eg `frc254`) of any teams playing as a surrogate.
          items:
            type: string
            description: Team key of a surrogate team.
        dq_team_keys:
          type: array
          description: TBA team keys (eg `frc254`) of any disqualified teams.
          items:
            type: string
            description: Team key of a disqualified team.
      example:
        score: 1
        team_keys:
        - team_keys
        - team_keys
        surrogate_team_keys:
        - surrogate_team_keys
        - surrogate_team_keys
        dq_team_keys:
        - dq_team_keys
        - dq_team_keys
    Zebra:
      required:
      - alliances
      - key
      - times
      type: object
      properties:
        key:
          type: string
          description: "TBA match key with the format `yyyy[EVENT_CODE]_[COMP_LEVEL]m[MATCH_NUMBER]`,\
            \ where `yyyy` is the year, and `EVENT_CODE` is the event code of the\
            \ event, `COMP_LEVEL` is (qm, ef, qf, sf, f), and `MATCH_NUMBER` is the\
            \ match number in the competition level. A set number may be appended\
            \ to the competition level if more than one match in required per set."
        times:
          type: array
          description: "A list of relative timestamps for each data point. Each timestamp\
            \ will correspond to the X and Y value at the same index in a team xs\
            \ and ys arrays. `times`, all teams `xs` and all teams `ys` are guarenteed\
            \ to be the same length."
          items:
            type: number
            format: double
        alliances:
          $ref: "#/components/schemas/Zebra_alliances"
      example:
        times:
        - 0.8008281904610115
        - 0.8008281904610115
        alliances:
          red:
          - ys:
            - 1.4658129805029452
            - 1.4658129805029452
            xs:
            - 6.027456183070403
            - 6.027456183070403
            team_key: frc7332
          - ys:
            - 1.4658129805029452
            - 1.4658129805029452
            xs:
            - 6.027456183070403
            - 6.027456183070403
            team_key: frc7332
          blue:
          - null
          - null
        key: key
    Zebra_team:
      required:
      - team_key
      - xs
      - ys
      type: object
      properties:
        team_key:
          type: string
          description: The TBA team key for the Zebra MotionWorks data.
          example: frc7332
        xs:
          type: array
          description: A list containing doubles and nulls representing a teams X
            position in feet at the corresponding timestamp. A null value represents
            no tracking data for a given timestamp.
          items:
            type: number
            format: double
        ys:
          type: array
          description: A list containing doubles and nulls representing a teams Y
            position in feet at the corresponding timestamp. A null value represents
            no tracking data for a given timestamp.
          items:
            type: number
            format: double
      example:
        ys:
        - 1.4658129805029452
        - 1.4658129805029452
        xs:
        - 6.027456183070403
        - 6.027456183070403
        team_key: frc7332
    Match_Score_Breakdown_2015:
      required:
      - blue
      - coopertition
      - coopertition_points
      - red
      type: object
      properties:
        blue:
          $ref: "#/components/schemas/Match_Score_Breakdown_2015_Alliance"
        red:
          $ref: "#/components/schemas/Match_Score_Breakdown_2015_Alliance"
        coopertition:
          type: string
          enum:
          - None
          - Unknown
          - Stack
        coopertition_points:
          type: integer
      description: See the 2015 FMS API documentation for a description of each value
    Match_Score_Breakdown_2015_Alliance:
      type: object
      properties:
        auto_points:
          type: integer
        teleop_points:
          type: integer
        container_points:
          type: integer
        tote_points:
          type: integer
        litter_points:
          type: integer
        foul_points:
          type: integer
        adjust_points:
          type: integer
        total_points:
          type: integer
        foul_count:
          type: integer
        tote_count_far:
          type: integer
        tote_count_near:
          type: integer
        tote_set:
          type: boolean
        tote_stack:
          type: boolean
        container_count_level1:
          type: integer
        container_count_level2:
          type: integer
        container_count_level3:
          type: integer
        container_count_level4:
          type: integer
        container_count_level5:
          type: integer
        container_count_level6:
          type: integer
        container_set:
          type: boolean
        litter_count_container:
          type: integer
        litter_count_landfill:
          type: integer
        litter_count_unprocessed:
          type: integer
        robot_set:
          type: boolean
    Match_Score_Breakdown_2016:
      required:
      - blue
      - red
      type: object
      properties:
        blue:
          $ref: "#/components/schemas/Match_Score_Breakdown_2016_Alliance"
        red:
          $ref: "#/components/schemas/Match_Score_Breakdown_2016_Alliance"
      description: See the 2016 FMS API documentation for a description of each value.
    Match_Score_Breakdown_2016_Alliance:
      type: object
      properties:
        autoPoints:
          type: integer
        teleopPoints:
          type: integer
        breachPoints:
          type: integer
        foulPoints:
          type: integer
        capturePoints:
          type: integer
        adjustPoints:
          type: integer
        totalPoints:
          type: integer
        robot1Auto:
          type: string
          enum:
          - Crossed
          - Reached
          - None
        robot2Auto:
          type: string
          enum:
          - Crossed
          - Reached
          - None
        robot3Auto:
          type: string
          enum:
          - Crossed
          - Reached
          - None
        autoReachPoints:
          type: integer
        autoCrossingPoints:
          type: integer
        autoBouldersLow:
          type: integer
        autoBouldersHigh:
          type: integer
        autoBoulderPoints:
          type: integer
        teleopCrossingPoints:
          type: integer
        teleopBouldersLow:
          type: integer
        teleopBouldersHigh:
          type: integer
        teleopBoulderPoints:
          type: integer
        teleopDefensesBreached:
          type: boolean
        teleopChallengePoints:
          type: integer
        teleopScalePoints:
          type: integer
        teleopTowerCaptured:
          type: boolean
        towerFaceA:
          type: string
        towerFaceB:
          type: string
        towerFaceC:
          type: string
        towerEndStrength:
          type: integer
        techFoulCount:
          type: integer
        foulCount:
          type: integer
        position2:
          type: string
        position3:
          type: string
        position4:
          type: string
        position5:
          type: string
        position1crossings:
          type: integer
        position2crossings:
          type: integer
        position3crossings:
          type: integer
        position4crossings:
          type: integer
        position5crossings:
          type: integer
    Match_Score_Breakdown_2017:
      required:
      - blue
      - red
      type: object
      properties:
        blue:
          $ref: "#/components/schemas/Match_Score_Breakdown_2017_Alliance"
        red:
          $ref: "#/components/schemas/Match_Score_Breakdown_2017_Alliance"
      description: See the 2017 FMS API documentation for a description of each value.
    Match_Score_Breakdown_2017_Alliance:
      type: object
      properties:
        autoPoints:
          type: integer
        teleopPoints:
          type: integer
        foulPoints:
          type: integer
        adjustPoints:
          type: integer
        totalPoints:
          type: integer
        robot1Auto:
          type: string
          enum:
          - Unknown
          - Mobility
          - None
        robot2Auto:
          type: string
          enum:
          - Unknown
          - Mobility
          - None
        robot3Auto:
          type: string
          enum:
          - Unknown
          - Mobility
          - None
        rotor1Auto:
          type: boolean
        rotor2Auto:
          type: boolean
        autoFuelLow:
          type: integer
        autoFuelHigh:
          type: integer
        autoMobilityPoints:
          type: integer
        autoRotorPoints:
          type: integer
        autoFuelPoints:
          type: integer
        teleopFuelPoints:
          type: integer
        teleopFuelLow:
          type: integer
        teleopFuelHigh:
          type: integer
        teleopRotorPoints:
          type: integer
        kPaRankingPointAchieved:
          type: boolean
        teleopTakeoffPoints:
          type: integer
        kPaBonusPoints:
          type: integer
        rotorBonusPoints:
          type: integer
        rotor1Engaged:
          type: boolean
        rotor2Engaged:
          type: boolean
        rotor3Engaged:
          type: boolean
        rotor4Engaged:
          type: boolean
        rotorRankingPointAchieved:
          type: boolean
        techFoulCount:
          type: integer
        foulCount:
          type: integer
        touchpadNear:
          type: string
        touchpadMiddle:
          type: string
        touchpadFar:
          type: string
    Match_Score_Breakdown_2018:
      required:
      - blue
      - red
      type: object
      properties:
        blue:
          $ref: "#/components/schemas/Match_Score_Breakdown_2018_Alliance"
        red:
          $ref: "#/components/schemas/Match_Score_Breakdown_2018_Alliance"
      description: See the 2018 FMS API documentation for a description of each value.
        https://frcevents2.docs.apiary.io/#/reference/match-results/score-details
    Match_Score_Breakdown_2018_Alliance:
      type: object
      properties:
        adjustPoints:
          type: integer
        autoOwnershipPoints:
          type: integer
        autoPoints:
          type: integer
        autoQuestRankingPoint:
          type: boolean
        autoRobot1:
          type: string
        autoRobot2:
          type: string
        autoRobot3:
          type: string
        autoRunPoints:
          type: integer
        autoScaleOwnershipSec:
          type: integer
        autoSwitchAtZero:
          type: boolean
        autoSwitchOwnershipSec:
          type: integer
        endgamePoints:
          type: integer
        endgameRobot1:
          type: string
        endgameRobot2:
          type: string
        endgameRobot3:
          type: string
        faceTheBossRankingPoint:
          type: boolean
        foulCount:
          type: integer
        foulPoints:
          type: integer
        rp:
          type: integer
        techFoulCount:
          type: integer
        teleopOwnershipPoints:
          type: integer
        teleopPoints:
          type: integer
        teleopScaleBoostSec:
          type: integer
        teleopScaleForceSec:
          type: integer
        teleopScaleOwnershipSec:
          type: integer
        teleopSwitchBoostSec:
          type: integer
        teleopSwitchForceSec:
          type: integer
        teleopSwitchOwnershipSec:
          type: integer
        totalPoints:
          type: integer
        vaultBoostPlayed:
          type: integer
        vaultBoostTotal:
          type: integer
        vaultForcePlayed:
          type: integer
        vaultForceTotal:
          type: integer
        vaultLevitatePlayed:
          type: integer
        vaultLevitateTotal:
          type: integer
        vaultPoints:
          type: integer
        tba_gameData:
          type: string
          description: "Unofficial TBA-computed value of the FMS provided GameData\
            \ given to the alliance teams at the start of the match. 3 Character String\
            \ containing `L` and `R` only. The first character represents the near\
            \ switch, the 2nd the scale, and the 3rd the far, opposing, switch from\
            \ the alliance's perspective. An `L` in a position indicates the platform\
            \ on the left will be lit for the alliance while an `R` will indicate\
            \ the right platform will be lit for the alliance. See also [WPI Screen\
            \ Steps](https://wpilib.screenstepslive.com/s/currentCS/m/getting_started/l/826278-2018-game-data-details)."
    Match_Timeseries_2018:
      type: object
      properties:
        event_key:
          type: string
          description: "TBA event key with the format yyyy[EVENT_CODE], where yyyy\
            \ is the year, and EVENT_CODE is the event code of the event."
        match_id:
          type: string
          description: "Match ID consisting of the level, match number, and set number,\
            \ eg `qm45` or `f1m1`."
        mode:
          type: string
          description: "Current mode of play, can be `pre_match`, `auto`, `telop`,\
            \ or `post_match`."
        play:
          type: integer
        time_remaining:
          type: integer
          description: "Amount of time remaining in the match, only valid during `auto`\
            \ and `teleop` modes."
        blue_auto_quest:
          type: integer
          description: "1 if the blue alliance is credited with the AUTO QUEST, 0\
            \ if not."
        blue_boost_count:
          type: integer
          description: Number of POWER CUBES in the BOOST section of the blue alliance
            VAULT.
        blue_boost_played:
          type: integer
          description: "Returns 1 if the blue alliance BOOST was played, or 0 if not\
            \ played."
        blue_current_powerup:
          type: string
          description: "Name of the current blue alliance POWER UP being played, or\
            \ `null`."
        blue_face_the_boss:
          type: integer
          description: "1 if the blue alliance is credited with FACING THE BOSS, 0\
            \ if not."
        blue_force_count:
          type: integer
          description: Number of POWER CUBES in the FORCE section of the blue alliance
            VAULT.
        blue_force_played:
          type: integer
          description: "Returns 1 if the blue alliance FORCE was played, or 0 if not\
            \ played."
        blue_levitate_count:
          type: integer
          description: Number of POWER CUBES in the LEVITATE section of the blue alliance
            VAULT.
        blue_levitate_played:
          type: integer
          description: "Returns 1 if the blue alliance LEVITATE was played, or 0 if\
            \ not played."
        blue_powerup_time_remaining:
          type: string
          description: "Number of seconds remaining in the blue alliance POWER UP\
            \ time, or 0 if none is active."
        blue_scale_owned:
          type: integer
          description: "1 if the blue alliance owns the SCALE, 0 if not."
        blue_score:
          type: integer
          description: Current score for the blue alliance.
        blue_switch_owned:
          type: integer
          description: "1 if the blue alliance owns their SWITCH, 0 if not."
        red_auto_quest:
          type: integer
          description: "1 if the red alliance is credited with the AUTO QUEST, 0 if\
            \ not."
        red_boost_count:
          type: integer
          description: Number of POWER CUBES in the BOOST section of the red alliance
            VAULT.
        red_boost_played:
          type: integer
          description: "Returns 1 if the red alliance BOOST was played, or 0 if not\
            \ played."
        red_current_powerup:
          type: string
          description: "Name of the current red alliance POWER UP being played, or\
            \ `null`."
        red_face_the_boss:
          type: integer
          description: "1 if the red alliance is credited with FACING THE BOSS, 0\
            \ if not."
        red_force_count:
          type: integer
          description: Number of POWER CUBES in the FORCE section of the red alliance
            VAULT.
        red_force_played:
          type: integer
          description: "Returns 1 if the red alliance FORCE was played, or 0 if not\
            \ played."
        red_levitate_count:
          type: integer
          description: Number of POWER CUBES in the LEVITATE section of the red alliance
            VAULT.
        red_levitate_played:
          type: integer
          description: "Returns 1 if the red alliance LEVITATE was played, or 0 if\
            \ not played."
        red_powerup_time_remaining:
          type: string
          description: "Number of seconds remaining in the red alliance POWER UP time,\
            \ or 0 if none is active."
        red_scale_owned:
          type: integer
          description: "1 if the red alliance owns the SCALE, 0 if not."
        red_score:
          type: integer
          description: Current score for the red alliance.
        red_switch_owned:
          type: integer
          description: "1 if the red alliance owns their SWITCH, 0 if not."
      description: |-
        Timeseries data for the 2018 game *FIRST* POWER UP.
        *WARNING:* This is *not* official data, and is subject to a significant possibility of error, or missing data. Do not rely on this data for any purpose. In fact, pretend we made it up.
        *WARNING:* This model is currently under active development and may change at any time, including in breaking ways.
    Match_Score_Breakdown_2019:
      required:
      - blue
      - red
      type: object
      properties:
        blue:
          $ref: "#/components/schemas/Match_Score_Breakdown_2019_Alliance"
        red:
          $ref: "#/components/schemas/Match_Score_Breakdown_2019_Alliance"
      description: See the 2019 FMS API documentation for a description of each value.
        https://frcevents2.docs.apiary.io/#/reference/match-results/score-details
    Match_Score_Breakdown_2019_Alliance:
      type: object
      properties:
        adjustPoints:
          type: integer
        autoPoints:
          type: integer
        bay1:
          type: string
        bay2:
          type: string
        bay3:
          type: string
        bay4:
          type: string
        bay5:
          type: string
        bay6:
          type: string
        bay7:
          type: string
        bay8:
          type: string
        cargoPoints:
          type: integer
        completeRocketRankingPoint:
          type: boolean
        completedRocketFar:
          type: boolean
        completedRocketNear:
          type: boolean
        endgameRobot1:
          type: string
        endgameRobot2:
          type: string
        endgameRobot3:
          type: string
        foulCount:
          type: integer
        foulPoints:
          type: integer
        habClimbPoints:
          type: integer
        habDockingRankingPoint:
          type: boolean
        habLineRobot1:
          type: string
        habLineRobot2:
          type: string
        habLineRobot3:
          type: string
        hatchPanelPoints:
          type: integer
        lowLeftRocketFar:
          type: string
        lowLeftRocketNear:
          type: string
        lowRightRocketFar:
          type: string
        lowRightRocketNear:
          type: string
        midLeftRocketFar:
          type: string
        midLeftRocketNear:
          type: string
        midRightRocketFar:
          type: string
        midRightRocketNear:
          type: string
        preMatchBay1:
          type: string
        preMatchBay2:
          type: string
        preMatchBay3:
          type: string
        preMatchBay6:
          type: string
        preMatchBay7:
          type: string
        preMatchBay8:
          type: string
        preMatchLevelRobot1:
          type: string
        preMatchLevelRobot2:
          type: string
        preMatchLevelRobot3:
          type: string
        rp:
          type: integer
        sandStormBonusPoints:
          type: integer
        techFoulCount:
          type: integer
        teleopPoints:
          type: integer
        topLeftRocketFar:
          type: string
        topLeftRocketNear:
          type: string
        topRightRocketFar:
          type: string
        topRightRocketNear:
          type: string
        totalPoints:
          type: integer
    Match_Score_Breakdown_2020:
      required:
      - blue
      - red
      type: object
      properties:
        blue:
          $ref: "#/components/schemas/Match_Score_Breakdown_2020_Alliance"
        red:
          $ref: "#/components/schemas/Match_Score_Breakdown_2020_Alliance"
      description: See the 2020 FMS API documentation for a description of each value.
        https://frcevents2.docs.apiary.io/#/reference/match-results/score-details
    Match_Score_Breakdown_2020_Alliance:
      type: object
      properties:
        initLineRobot1:
          type: string
        endgameRobot1:
          type: string
        initLineRobot2:
          type: string
        endgameRobot2:
          type: string
        initLineRobot3:
          type: string
        endgameRobot3:
          type: string
        autoCellsBottom:
          type: integer
        autoCellsOuter:
          type: integer
        autoCellsInner:
          type: integer
        teleopCellsBottom:
          type: integer
        teleopCellsOuter:
          type: integer
        teleopCellsInner:
          type: integer
        stage1Activated:
          type: boolean
        stage2Activated:
          type: boolean
        stage3Activated:
          type: boolean
        stage3TargetColor:
          type: string
        endgameRungIsLevel:
          type: string
        autoInitLinePoints:
          type: integer
        autoCellPoints:
          type: integer
        autoPoints:
          type: integer
        teleopCellPoints:
          type: integer
        controlPanelPoints:
          type: integer
        endgamePoints:
          type: integer
        teleopPoints:
          type: integer
        shieldOperationalRankingPoint:
          type: boolean
        shieldEnergizedRankingPoint:
          type: boolean
        tba_shieldEnergizedRankingPointFromFoul:
          type: boolean
          description: Unofficial TBA-computed value that indicates whether the shieldEnergizedRankingPoint
            was earned normally or awarded due to a foul.
        tba_numRobotsHanging:
          type: integer
          description: Unofficial TBA-computed value that counts the number of robots
            who were hanging at the end of the match.
        foulCount:
          type: integer
        techFoulCount:
          type: integer
        adjustPoints:
          type: integer
        foulPoints:
          type: integer
        rp:
          type: integer
        totalPoints:
          type: integer
    Match_Score_Breakdown_2022:
      required:
      - blue
      - red
      type: object
      properties:
        blue:
          $ref: "#/components/schemas/Match_Score_Breakdown_2022_Alliance"
        red:
          $ref: "#/components/schemas/Match_Score_Breakdown_2022_Alliance"
      description: See the 2022 FMS API documentation for a description of each value.
        https://frc-api-docs.firstinspires.org
    Match_Score_Breakdown_2022_Alliance:
      type: object
      properties:
        taxiRobot1:
          type: string
          enum:
          - "Yes"
          - "No"
        endgameRobot1:
          type: string
          enum:
          - Traversal
          - High
          - Mid
          - Low
          - None
        taxiRobot2:
          type: string
          enum:
          - "Yes"
          - "No"
        endgameRobot2:
          type: string
          enum:
          - Traversal
          - High
          - Mid
          - Low
          - None
        taxiRobot3:
          type: string
          enum:
          - "Yes"
          - "No"
        endgameRobot3:
          type: string
          enum:
          - Traversal
          - High
          - Mid
          - Low
          - None
        autoCargoLowerNear:
          type: integer
        autoCargoLowerFar:
          type: integer
        autoCargoLowerBlue:
          type: integer
        autoCargoLowerRed:
          type: integer
        autoCargoUpperNear:
          type: integer
        autoCargoUpperFar:
          type: integer
        autoCargoUpperBlue:
          type: integer
        autoCargoUpperRed:
          type: integer
        autoCargoTotal:
          type: integer
        teleopCargoLowerNear:
          type: integer
        teleopCargoLowerFar:
          type: integer
        teleopCargoLowerBlue:
          type: integer
        teleopCargoLowerRed:
          type: integer
        teleopCargoUpperNear:
          type: integer
        teleopCargoUpperFar:
          type: integer
        teleopCargoUpperBlue:
          type: integer
        teleopCargoUpperRed:
          type: integer
        teleopCargoTotal:
          type: integer
        matchCargoTotal:
          type: integer
        autoTaxiPoints:
          type: integer
        autoCargoPoints:
          type: integer
        autoPoints:
          type: integer
        quintetAchieved:
          type: boolean
        teleopCargoPoints:
          type: integer
        endgamePoints:
          type: integer
        teleopPoints:
          type: integer
        cargoBonusRankingPoint:
          type: boolean
        hangarBonusRankingPoint:
          type: boolean
        foulCount:
          type: integer
        techFoulCount:
          type: integer
        adjustPoints:
          type: integer
        foulPoints:
          type: integer
        rp:
          type: integer
        totalPoints:
          type: integer
    Match_Score_Breakdown_2023:
      required:
      - blue
      - red
      type: object
      properties:
        blue:
          $ref: "#/components/schemas/Match_Score_Breakdown_2023_Alliance"
        red:
          $ref: "#/components/schemas/Match_Score_Breakdown_2023_Alliance"
      description: See the 2023 FMS API documentation for a description of each value.
        https://frc-api-docs.firstinspires.org
    Match_Score_Breakdown_2023_Alliance:
      type: object
      properties:
        activationBonusAchieved:
          type: boolean
        adjustPoints:
          type: integer
        autoBridgeState:
          type: string
          enum:
          - NotLevel
          - Level
        autoChargeStationPoints:
          type: integer
        autoChargeStationRobot1:
          type: string
          enum:
          - None
          - Docked
        autoChargeStationRobot2:
          type: string
          enum:
          - None
          - Docked
        autoChargeStationRobot3:
          type: string
          enum:
          - None
          - Docked
        autoDocked:
          type: boolean
        autoCommunity:
          $ref: "#/components/schemas/Match_Score_Breakdown_2023_Alliance_autoCommunity"
        autoGamePieceCount:
          type: integer
        autoGamePiecePoints:
          type: integer
        autoMobilityPoints:
          type: integer
        mobilityRobot1:
          type: string
          enum:
          - "Yes"
          - "No"
        mobilityRobot2:
          type: string
          enum:
          - "Yes"
          - "No"
        mobilityRobot3:
          type: string
          enum:
          - "Yes"
          - "No"
        autoPoints:
          type: integer
        coopGamePieceCount:
          type: integer
        coopertitionCriteriaMet:
          type: boolean
        endGameBridgeState:
          type: string
          enum:
          - NotLevel
          - Level
        endGameChargeStationPoints:
          type: integer
        endGameChargeStationRobot1:
          type: string
          enum:
          - None
          - Docked
          - Park
        endGameChargeStationRobot2:
          type: string
          enum:
          - None
          - Docked
          - Park
        endGameChargeStationRobot3:
          type: string
          enum:
          - None
          - Docked
          - Park
        endGameParkPoints:
          type: integer
        extraGamePieceCount:
          type: integer
        foulCount:
          type: integer
        foulPoints:
          type: integer
        techFoulCount:
          type: integer
        linkPoints:
          type: integer
        links:
          type: array
          items:
            $ref: "#/components/schemas/Match_Score_Breakdown_2023_Alliance_links"
        sustainabilityBonusAchieved:
          type: boolean
        teleopCommunity:
          $ref: "#/components/schemas/Match_Score_Breakdown_2023_Alliance_autoCommunity"
        teleopGamePieceCount:
          type: integer
        teleopGamePiecePoints:
          type: integer
        totalChargeStationPoints:
          type: integer
        teleopPoints:
          type: integer
        rp:
          type: integer
        totalPoints:
          type: integer
    Match_Score_Breakdown_2024:
      required:
      - blue
      - red
      type: object
      properties:
        blue:
          $ref: "#/components/schemas/Match_Score_Breakdown_2024_Alliance"
        red:
          $ref: "#/components/schemas/Match_Score_Breakdown_2024_Alliance"
      description: See the 2024 FMS API documentation for a description of each value.
        https://frc-api-docs.firstinspires.org
    Match_Score_Breakdown_2024_Alliance:
      type: object
      properties:
        adjustPoints:
          type: integer
        autoAmpNoteCount:
          type: integer
        autoAmpNotePoints:
          type: integer
        autoLeavePoints:
          type: integer
        autoLineRobot1:
          type: string
        autoLineRobot2:
          type: string
        autoLineRobot3:
          type: string
        autoPoints:
          type: integer
        autoSpeakerNoteCount:
          type: integer
        autoSpeakerNotePoints:
          type: integer
        autoTotalNotePoints:
          type: integer
        coopNotePlayed:
          type: boolean
        coopertitionBonusAchieved:
          type: boolean
        coopertitionCriteriaMet:
          type: boolean
        endGameHarmonyPoints:
          type: integer
        endGameNoteInTrapPoints:
          type: integer
        endGameOnStagePoints:
          type: integer
        endGameParkPoints:
          type: integer
        endGameRobot1:
          type: string
        endGameRobot2:
          type: string
        endGameRobot3:
          type: string
        endGameSpotLightBonusPoints:
          type: integer
        endGameTotalStagePoints:
          type: integer
        ensembleBonusAchieved:
          type: boolean
        ensembleBonusOnStageRobotsThreshold:
          type: integer
        ensembleBonusStagePointsThreshold:
          type: integer
        foulCount:
          type: integer
        foulPoints:
          type: integer
        g206Penalty:
          type: boolean
        g408Penalty:
          type: boolean
        g424Penalty:
          type: boolean
        melodyBonusAchieved:
          type: boolean
        melodyBonusThreshold:
          type: integer
        melodyBonusThresholdCoop:
          type: integer
        melodyBonusThresholdNonCoop:
          type: integer
        micCenterStage:
          type: boolean
        micStageLeft:
          type: boolean
        micStageRight:
          type: boolean
        rp:
          type: integer
        techFoulCount:
          type: integer
        teleopAmpNoteCount:
          type: integer
        teleopAmpNotePoints:
          type: integer
        teleopPoints:
          type: integer
        teleopSpeakerNoteAmplifiedCount:
          type: integer
        teleopSpeakerNoteAmplifiedPoints:
          type: integer
        teleopSpeakerNoteCount:
          type: integer
        teleopSpeakerNotePoints:
          type: integer
        teleopTotalNotePoints:
          type: integer
        totalPoints:
          type: integer
        trapCenterStage:
          type: boolean
        trapStageLeft:
          type: boolean
        trapStageRight:
          type: boolean
    Match_Score_Breakdown_2025:
      required:
      - blue
      - red
      type: object
      properties:
        blue:
          $ref: "#/components/schemas/Match_Score_Breakdown_2025_Alliance"
        red:
          $ref: "#/components/schemas/Match_Score_Breakdown_2025_Alliance"
      description: See the 2025 FMS API documentation for a description of each value.
        https://frc-api-docs.firstinspires.org
    Match_Score_Breakdown_2025_Alliance:
      type: object
      properties:
        adjustPoints:
          type: integer
        algaePoints:
          type: integer
        autoBonusAchieved:
          type: boolean
        autoCoralCount:
          type: integer
        autoCoralPoints:
          type: integer
        autoLineRobot1:
          type: string
          enum:
          - "No"
          - "Yes"
        autoLineRobot2:
          type: string
          enum:
          - "No"
          - "Yes"
        autoLineRobot3:
          type: string
          enum:
          - "No"
          - "Yes"
        autoMobilityPoints:
          type: integer
        autoPoints:
          type: integer
        autoReef:
          $ref: "#/components/schemas/Match_Score_Breakdown_2025_Alliance_autoReef"
        bargeBonusAchieved:
          type: boolean
        coopertitionCriteriaMet:
          type: boolean
        coralBonusAchieved:
          type: boolean
        endGameBargePoints:
          type: integer
        endGameRobot1:
          type: string
          enum:
          - None
          - Parked
          - ShallowCage
          - DeepCage
        endGameRobot2:
          type: string
          enum:
          - None
          - Parked
          - ShallowCage
          - DeepCage
        endGameRobot3:
          type: string
          enum:
          - None
          - Parked
          - ShallowCage
          - DeepCage
        foulCount:
          type: integer
        foulPoints:
          type: integer
        g206Penalty:
          type: boolean
        g410Penalty:
          type: boolean
        g418Penalty:
          type: boolean
        g428Penalty:
          type: boolean
        netAlgaeCount:
          type: integer
        rp:
          type: integer
        techFoulCount:
          type: integer
        teleopCoralCount:
          type: integer
        teleopCoralPoints:
          type: integer
        teleopPoints:
          type: integer
        teleopReef:
          $ref: "#/components/schemas/Match_Score_Breakdown_2025_Alliance_autoReef"
        totalPoints:
          type: integer
        wallAlgaeCount:
          type: integer
    Media:
      required:
      - foreign_key
      - team_keys
      - type
      type: object
      properties:
        type:
          type: string
          description: String type of the media element.
          enum:
          - youtube
          - cdphotothread
          - imgur
          - facebook-profile
          - youtube-channel
          - twitter-profile
          - github-profile
          - instagram-profile
          - periscope-profile
          - gitlab-profile
          - grabcad
          - instagram-image
          - external-link
          - avatar
        foreign_key:
          type: string
          description: The key used to identify this media on the media site.
        details:
          type: object
          additionalProperties: true
          description: "If required, a JSON dict of additional media information."
        preferred:
          type: boolean
          description: True if the media is of high quality.
        team_keys:
          type: array
          description: List of teams that this media belongs to. Most likely length
            1.
          items:
            type: string
            description: Team key.
        direct_url:
          type: string
          description: Direct URL to the media.
        view_url:
          type: string
          description: "The URL that leads to the full web page for the media, if\
            \ one exists."
      description: The `Media` object contains a reference for most any media associated
        with a team or event on TBA.
      example:
        team_keys:
        - team_keys
        - team_keys
        direct_url: direct_url
        foreign_key: foreign_key
        view_url: view_url
        details: ""
        type: youtube
        preferred: true
    Elimination_Alliance:
      required:
      - declines
      - picks
      type: object
      properties:
        name:
          type: string
          description: "Alliance name, may be null."
          nullable: true
        backup:
          $ref: "#/components/schemas/Elimination_Alliance_backup"
        declines:
          type: array
          description: List of teams that declined the alliance.
          items:
            type: string
            description: Team key that declined the alliance.
        picks:
          type: array
          description: List of team keys picked for the alliance. First pick is captain.
          items:
            type: string
            description: Team key picked for the alliance.
        status:
          $ref: "#/components/schemas/Elimination_Alliance_status"
      example:
        declines:
        - declines
        - declines
        backup:
          in: in
          out: out
        name: name
        picks:
        - picks
        - picks
        status:
          playoff_average: 0.8008281904610115
          level: level
          record: ""
          current_level_record: ""
          status: status
    Award:
      required:
      - award_type
      - event_key
      - name
      - recipient_list
      - year
      type: object
      properties:
        name:
          type: string
          description: The name of the award as provided by FIRST. May vary for the
            same award type.
        award_type:
          type: integer
          description: Type of award given. See https://github.com/the-blue-alliance/the-blue-alliance/blob/master/consts/award_type.py#L6
        event_key:
          type: string
          description: The event_key of the event the award was won at.
        recipient_list:
          type: array
          description: "A list of recipients of the award at the event. May have either\
            \ a team_key or an awardee, both, or neither (in the case the award wasn't\
            \ awarded at the event)."
          items:
            $ref: "#/components/schemas/Award_Recipient"
        year:
          type: integer
          description: The year this award was won.
      example:
        year: 9
        name: name
        recipient_list:
        - awardee: awardee
          team_key: team_key
        - awardee: awardee
          team_key: team_key
        award_type: 7
        event_key: event_key
    Award_Recipient:
      required:
      - awardee
      - team_key
      type: object
      properties:
        team_key:
          type: string
          description: The TBA team key for the team that was given the award. May
            be null.
          nullable: true
        awardee:
          type: string
          description: The name of the individual given the award. May be null.
          nullable: true
      description: An `Award_Recipient` object represents the team and/or person who
        received an award at an event.
      example:
        awardee: awardee
        team_key: team_key
    District_List:
      required:
      - abbreviation
      - display_name
      - key
      - year
      type: object
      properties:
        abbreviation:
          type: string
          description: The short identifier for the district.
        display_name:
          type: string
          description: The long name for the district.
        key:
          type: string
          description: "Key for this district, e.g. `2016ne`."
        year:
          type: integer
          description: Year this district participated.
      example:
        year: 0
        abbreviation: abbreviation
        display_name: display_name
        key: key
    District_Ranking:
      required:
      - point_total
      - rank
      - team_key
      type: object
      properties:
        team_key:
          type: string
          description: TBA team key for the team.
        rank:
          type: integer
          description: "Numerical rank of the team, 1 being top rank."
        rookie_bonus:
          type: integer
          description: Any points added to a team as a result of the rookie bonus.
        point_total:
          type: integer
          description: Total district points for the team.
        event_points:
          type: array
          description: List of events that contributed to the point total for the
            team.
          items:
            $ref: "#/components/schemas/District_Ranking_event_points"
      description: Rank of a team in a district.
      example:
        rookie_bonus: 6
        rank: 0
        point_total: 1
        team_key: team_key
        event_points:
        - district_cmp: true
          total: 5
          alliance_points: 5
          elim_points: 2
          award_points: 7
          event_key: event_key
          qual_points: 9
        - district_cmp: true
          total: 5
          alliance_points: 5
          elim_points: 2
          award_points: 7
          event_key: event_key
          qual_points: 9
    Regional_Ranking:
      required:
      - point_total
      - rank
      - team_key
      type: object
      properties:
        team_key:
          type: string
          description: TBA team key for the team.
        rank:
          type: integer
          description: "Numerical rank of the team, 1 being top rank."
        rookie_bonus:
          type: integer
          description: Any points added to a team as a result of the rookie bonus.
        single_event_bonus:
          type: integer
          description: "Additional points awarded in lieu of a second event, based\
            \ on first event performance"
        point_total:
          type: integer
          description: Total district points for the team.
        event_points:
          type: array
          description: List of events that contributed to the point total for the
            team.
          items:
            $ref: "#/components/schemas/Regional_Ranking_event_points"
      description: Rank of a team in the regional pool.
      example:
        single_event_bonus: 1
        rookie_bonus: 6
        rank: 0
        point_total: 5
        team_key: team_key
        event_points:
        - total: 5
          alliance_points: 2
          elim_points: 7
          award_points: 9
          event_key: event_key
          qual_points: 3
        - total: 5
          alliance_points: 2
          elim_points: 7
          award_points: 9
          event_key: event_key
          qual_points: 3
    WLT_Record:
      required:
      - losses
      - ties
      - wins
      type: object
      properties:
        losses:
          type: integer
          description: Number of losses.
        wins:
          type: integer
          description: Number of wins.
        ties:
          type: integer
          description: Number of ties.
      description: "A Win-Loss-Tie record for a team, or an alliance."
    Webcast:
      required:
      - channel
      - type
      type: object
      properties:
        type:
          type: string
          description: "Type of webcast, typically descriptive of the streaming provider."
          enum:
          - youtube
          - twitch
          - ustream
          - iframe
          - html5
          - rtmp
          - livestream
          - direct_link
          - mms
          - justin
          - stemtv
          - dacast
        channel:
          type: string
          description: "Type specific channel information. May be the YouTube stream,\
            \ or Twitch channel name. In the case of iframe types, contains HTML to\
            \ embed the stream in an HTML iframe."
        date:
          type: string
          description: The date for the webcast in `yyyy-mm-dd` format. May be null.
          nullable: true
        file:
          type: string
          description: File identification as may be required for some types. May
            be null.
          nullable: true
      example:
        date: date
        file: file
        channel: channel
        type: youtube
    LeaderboardInsight:
      required:
      - data
      - name
      - year
      type: object
      properties:
        data:
          $ref: "#/components/schemas/LeaderboardInsight_data"
        name:
          type: string
          description: Name of the insight.
        year:
          type: integer
          description: Year the insight was measured in (year=0 for overall insights).
      example:
        data:
          rankings:
          - keys:
            - keys
            - keys
            value: 0.8008281904610115
          - keys:
            - keys
            - keys
            value: 0.8008281904610115
          key_type: team
        year: 6
        name: name
    NotablesInsight:
      required:
      - data
      - name
      - year
      type: object
      properties:
        data:
          $ref: "#/components/schemas/NotablesInsight_data"
        name:
          type: string
        year:
          type: integer
      example:
        data:
          entries:
          - context:
            - context
            - context
            team_key: team_key
          - context:
            - context
            - context
            team_key: team_key
        year: 0
        name: name
    History:
      required:
      - awards
      - events
      type: object
      properties:
        events:
          type: array
          items:
            $ref: "#/components/schemas/Event"
        awards:
          type: array
          items:
            $ref: "#/components/schemas/Award"
      example:
        awards:
        - year: 9
          name: name
          recipient_list:
          - awardee: awardee
            team_key: team_key
          - awardee: awardee
            team_key: team_key
          award_type: 7
          event_key: event_key
        - year: 9
          name: name
          recipient_list:
          - awardee: awardee
            team_key: team_key
          - awardee: awardee
            team_key: team_key
          award_type: 7
          event_key: event_key
        events:
        - end_date: 2000-01-23
          country: country
          week: 1
          playoff_type: 2
          city: city
          year: 6
          timezone: timezone
          event_type: 0
          event_code: event_code
          playoff_type_string: playoff_type_string
          event_type_string: event_type_string
          webcasts:
          - date: date
            file: file
            channel: channel
            type: youtube
          - date: date
            file: file
            channel: channel
            type: youtube
          key: key
          lat: 5.962133916683182
          start_date: 2000-01-23
          first_event_code: first_event_code
          parent_event_key: parent_event_key
          website: website
          division_keys:
          - division_keys
          - division_keys
          address: address
          lng: 5.637376656633329
          gmaps_place_id: gmaps_place_id
          gmaps_url: http://example.com/aeiou
          location_name: location_name
          district: ""
          name: name
          state_prov: state_prov
          short_name: short_name
          first_event_id: first_event_id
          postal_code: postal_code
        - end_date: 2000-01-23
          country: country
          week: 1
          playoff_type: 2
          city: city
          year: 6
          timezone: timezone
          event_type: 0
          event_code: event_code
          playoff_type_string: playoff_type_string
          event_type_string: event_type_string
          webcasts:
          - date: date
            file: file
            channel: channel
            type: youtube
          - date: date
            file: file
            channel: channel
            type: youtube
          key: key
          lat: 5.962133916683182
          start_date: 2000-01-23
          first_event_code: first_event_code
          parent_event_key: parent_event_key
          website: website
          division_keys:
          - division_keys
          - division_keys
          address: address
          lng: 5.637376656633329
          gmaps_place_id: gmaps_place_id
          gmaps_url: http://example.com/aeiou
          location_name: location_name
          district: ""
          name: name
          state_prov: state_prov
          short_name: short_name
          first_event_id: first_event_id
          postal_code: postal_code
    SearchIndex:
      required:
      - events
      - teams
      type: object
      properties:
        teams:
          type: array
          items:
            $ref: "#/components/schemas/SearchIndex_teams"
        events:
          type: array
          items:
            $ref: "#/components/schemas/SearchIndex_events"
      example:
        teams:
        - nickname: nickname
          key: key
        - nickname: nickname
          key: key
        events:
        - name: name
          key: key
        - name: name
          key: key
    inline_response_401:
      required:
      - Error
      type: object
      properties:
        Error:
          type: string
          description: Authorization error description.
    inline_response_200:
      nullable: true
      allOf:
      - $ref: "#/components/schemas/Team_Event_Status"
    inline_response_200_1:
      nullable: true
      allOf:
      - $ref: "#/components/schemas/Event_Insights"
    inline_response_200_2:
      nullable: true
      allOf:
      - $ref: "#/components/schemas/Event_OPRs"
    inline_response_200_3:
      nullable: true
      allOf:
      - $ref: "#/components/schemas/Event_COPRs"
    inline_response_200_4:
      nullable: true
      allOf:
      - $ref: "#/components/schemas/Event_Predictions"
    inline_response_200_5:
      nullable: true
      allOf:
      - $ref: "#/components/schemas/Event_Ranking"
    inline_response_200_6:
      nullable: true
      allOf:
      - $ref: "#/components/schemas/Event_District_Points"
    Team_Event_Status_rank_ranking:
      type: object
      properties:
        matches_played:
          type: integer
          description: Number of matches played.
        qual_average:
          type: number
          description: "For some years, average qualification score. Can be null."
          format: double
        sort_orders:
          type: array
          description: Ordered list of values used to determine the rank. See the
            `sort_order_info` property for the name of each value.
          items:
            type: number
            format: double
        record:
          anyOf:
          - $ref: "#/components/schemas/WLT_Record"
          - type: "null"
        rank:
          type: integer
          description: Relative rank of this team.
        dq:
          type: integer
          description: Number of matches the team was disqualified for.
        team_key:
          type: string
          description: TBA team key for this rank.
    Team_Event_Status_rank_sort_order_info:
      type: object
      properties:
        precision:
          type: integer
          description: "The number of digits of precision used for this value, eg\
            \ `2` would correspond to a value of `101.11` while `0` would correspond\
            \ to `101`."
        name:
          type: string
          description: The descriptive name of the value used to sort the ranking.
    Event_Ranking_rankings:
      required:
      - dq
      - extra_stats
      - matches_played
      - qual_average
      - rank
      - record
      - sort_orders
      - team_key
      type: object
      properties:
        matches_played:
          type: integer
          description: Number of matches played by this team.
        qual_average:
          type: integer
          description: The average match score during qualifications. Year specific.
            May be null if not relevant for a given year.
          nullable: true
        extra_stats:
          type: array
          description: Additional special data on the team's performance calculated
            by TBA.
          items:
            type: number
        sort_orders:
          type: array
          description: "Additional year-specific information, may be null. See parent\
            \ `sort_order_info` for details."
          nullable: true
          items:
            type: number
            format: double
        record:
          anyOf:
          - $ref: "#/components/schemas/WLT_Record"
          - type: "null"
        rank:
          type: integer
          description: The team's rank at the event as provided by FIRST.
        dq:
          type: integer
          description: Number of times disqualified.
        team_key:
          type: string
          description: The team with this rank.
    Event_Ranking_extra_stats_info:
      required:
      - name
      - precision
      type: object
      properties:
        precision:
          type: number
          description: Integer expressing the number of digits of precision in the
            number provided in `sort_orders`.
        name:
          type: string
          description: Name of the field used in the `extra_stats` array.
    Event_Ranking_sort_order_info:
      required:
      - name
      - precision
      type: object
      properties:
        precision:
          type: integer
          description: Integer expressing the number of digits of precision in the
            number provided in `sort_orders`.
        name:
          type: string
          description: Name of the field used in the `sort_order` array.
    Event_District_Points_points:
      required:
      - alliance_points
      - award_points
      - elim_points
      - qual_points
      - total
      type: object
      properties:
        total:
          type: integer
          description: Total points awarded at this event.
        alliance_points:
          type: integer
          description: Points awarded for alliance selection
        elim_points:
          type: integer
          description: Points awarded for elimination match performance.
        award_points:
          type: integer
          description: Points awarded for event awards.
        qual_points:
          type: integer
          description: Points awarded for qualification match performance.
    Event_District_Points_tiebreakers:
      type: object
      properties:
        highest_qual_scores:
          type: array
          items:
            type: integer
        qual_wins:
          type: integer
    Match_Simple_alliances:
      required:
      - blue
      - red
      type: object
      properties:
        red:
          $ref: "#/components/schemas/Match_alliance"
        blue:
          $ref: "#/components/schemas/Match_alliance"
      description: "A list of alliances, the teams on the alliances, and their score."
      example:
        red:
          score: 1
          team_keys:
          - team_keys
          - team_keys
          surrogate_team_keys:
          - surrogate_team_keys
          - surrogate_team_keys
          dq_team_keys:
          - dq_team_keys
          - dq_team_keys
        blue: null
    Match_videos:
      required:
      - key
      - type
      type: object
      properties:
        type:
          type: string
          description: Can be one of 'youtube' or 'tba'
        key:
          type: string
          description: Unique key representing this video
      example:
        type: type
        key: key
    Zebra_alliances:
      type: object
      properties:
        red:
          type: array
          description: Zebra MotionWorks data for teams on the red alliance
          items:
            $ref: "#/components/schemas/Zebra_team"
        blue:
          type: array
          description: Zebra data for teams on the blue alliance
          items:
            $ref: "#/components/schemas/Zebra_team"
      example:
        red:
        - ys:
          - 1.4658129805029452
          - 1.4658129805029452
          xs:
          - 6.027456183070403
          - 6.027456183070403
          team_key: frc7332
        - ys:
          - 1.4658129805029452
          - 1.4658129805029452
          xs:
          - 6.027456183070403
          - 6.027456183070403
          team_key: frc7332
        blue:
        - null
        - null
    Match_Score_Breakdown_2023_Alliance_autoCommunity:
      required:
      - B
      - M
      - T
      type: object
      properties:
        B:
          type: array
          items:
            type: string
            enum:
            - None
            - Cone
            - Cube
        M:
          type: array
          items:
            type: string
            enum:
            - None
            - Cone
            - Cube
        T:
          type: array
          items:
            type: string
            enum:
            - None
            - Cone
            - Cube
    Match_Score_Breakdown_2023_Alliance_links:
      required:
      - nodes
      - row
      type: object
      properties:
        nodes:
          type: array
          items:
            type: string
            enum:
            - None
            - Cone
            - Cube
        row:
          type: string
          enum:
          - Bottom
          - Mid
          - Top
    Match_Score_Breakdown_2025_Alliance_autoReef_topRow:
      required:
      - nodeA
      - nodeB
      - nodeC
      - nodeD
      - nodeE
      - nodeF
      - nodeG
      - nodeH
      - nodeI
      - nodeJ
      - nodeK
      - nodeL
      type: object
      properties:
        nodeA:
          type: boolean
        nodeB:
          type: boolean
        nodeC:
          type: boolean
        nodeD:
          type: boolean
        nodeE:
          type: boolean
        nodeF:
          type: boolean
        nodeG:
          type: boolean
        nodeH:
          type: boolean
        nodeI:
          type: boolean
        nodeJ:
          type: boolean
        nodeK:
          type: boolean
        nodeL:
          type: boolean
    Match_Score_Breakdown_2025_Alliance_autoReef:
      required:
      - botRow
      - midRow
      - topRow
      - trough
      type: object
      properties:
        topRow:
          $ref: "#/components/schemas/Match_Score_Breakdown_2025_Alliance_autoReef_topRow"
        midRow:
          $ref: "#/components/schemas/Match_Score_Breakdown_2025_Alliance_autoReef_topRow"
        botRow:
          $ref: "#/components/schemas/Match_Score_Breakdown_2025_Alliance_autoReef_topRow"
        trough:
          type: integer
        tba_botRowCount:
          type: integer
          description: Unofficial TBA-computed value that sums the total number of
            game pieces scored in the botRow object.
        tba_midRowCount:
          type: integer
          description: Unofficial TBA-computed value that sums the total number of
            game pieces scored in the midRow object.
        tba_topRowCount:
          type: integer
          description: Unofficial TBA-computed value that sums the total number of
            game pieces scored in the topRow object.
    Elimination_Alliance_backup:
      required:
      - in
      - out
      type: object
      properties:
        in:
          type: string
          description: Team key that was called in as the backup.
        out:
          type: string
          description: Team key that was replaced by the backup team.
      description: "Backup team called in, may be null."
      nullable: true
      example:
        in: in
        out: out
    Elimination_Alliance_status:
      type: object
      properties:
        playoff_average:
          type: number
          format: double
        level:
          type: string
        record:
          anyOf:
          - $ref: "#/components/schemas/WLT_Record"
          - type: "null"
        current_level_record:
          anyOf:
          - $ref: "#/components/schemas/WLT_Record"
          - type: "null"
        status:
          type: string
      example:
        playoff_average: 0.8008281904610115
        level: level
        record: ""
        current_level_record: ""
        status: status
    District_Ranking_event_points:
      required:
      - alliance_points
      - award_points
      - district_cmp
      - elim_points
      - event_key
      - qual_points
      - total
      type: object
      properties:
        district_cmp:
          type: boolean
          description: '`true` if this event is a District Championship event.'
        total:
          type: integer
          description: Total points awarded at this event.
        alliance_points:
          type: integer
          description: Points awarded for alliance selection.
        elim_points:
          type: integer
          description: Points awarded for elimination match performance.
        award_points:
          type: integer
          description: Points awarded for event awards.
        event_key:
          type: string
          description: TBA Event key for this event.
        qual_points:
          type: integer
          description: Points awarded for qualification match performance.
      example:
        district_cmp: true
        total: 5
        alliance_points: 5
        elim_points: 2
        award_points: 7
        event_key: event_key
        qual_points: 9
    Regional_Ranking_event_points:
      required:
      - alliance_points
      - award_points
      - elim_points
      - event_key
      - qual_points
      - total
      type: object
      properties:
        total:
          type: integer
          description: Total points awarded at this event.
        alliance_points:
          type: integer
          description: Points awarded for alliance selection.
        elim_points:
          type: integer
          description: Points awarded for elimination match performance.
        award_points:
          type: integer
          description: Points awarded for event awards.
        event_key:
          type: string
          description: TBA Event key for this event.
        qual_points:
          type: integer
          description: Points awarded for qualification match performance.
      example:
        total: 5
        alliance_points: 2
        elim_points: 7
        award_points: 9
        event_key: event_key
        qual_points: 3
    LeaderboardInsight_data_rankings:
      required:
      - keys
      - value
      type: object
      properties:
        value:
          type: number
          description: "Value of the insight that the corresponding team/event/matches\
            \ have, e.g. number of blue banners, or number of matches played."
        keys:
          type: array
          description: Team/Event/Match keys that have the corresponding value.
          items:
            type: string
      example:
        keys:
        - keys
        - keys
        value: 0.8008281904610115
    LeaderboardInsight_data:
      required:
      - key_type
      - rankings
      type: object
      properties:
        rankings:
          type: array
          items:
            $ref: "#/components/schemas/LeaderboardInsight_data_rankings"
        key_type:
          type: string
          description: "What type of key is used in the rankings; either 'team', 'event',\
            \ or 'match'."
          enum:
          - team
          - event
          - match
      example:
        rankings:
        - keys:
          - keys
          - keys
          value: 0.8008281904610115
        - keys:
          - keys
          - keys
          value: 0.8008281904610115
        key_type: team
    NotablesInsight_data_entries:
      required:
      - context
      - team_key
      type: object
      properties:
        context:
          type: array
          description: A list of events this team achieved the notable at. This type
            may change over time.
          items:
            type: string
        team_key:
          type: string
      example:
        context:
        - context
        - context
        team_key: team_key
    NotablesInsight_data:
      required:
      - entries
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: "#/components/schemas/NotablesInsight_data_entries"
      example:
        entries:
        - context:
          - context
          - context
          team_key: team_key
        - context:
          - context
          - context
          team_key: team_key
    SearchIndex_teams:
      required:
      - key
      - nickname
      type: object
      properties:
        key:
          type: string
        nickname:
          type: string
      example:
        nickname: nickname
        key: key
    SearchIndex_events:
      required:
      - key
      - name
      type: object
      properties:
        key:
          type: string
        name:
          type: string
      example:
        name: name
        key: key
  responses:
    Unauthorized:
      description: Authorization information is missing or invalid.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_401"
    NotFound:
      description: Not Found
    NotModified:
      description: Not Modified - Use Local Cached Value
  parameters:
    year:
      name: year
      in: path
      description: Competition Year (or Season). Must be 4 digits.
      required: true
      style: simple
      explode: false
      schema:
        type: integer
    media_tag:
      name: media_tag
      in: path
      description: Media Tag which describes the Media.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    If-None-Match:
      name: If-None-Match
      in: header
      description: Value of the `ETag` header in the most recently cached response
        by the client.
      required: false
      style: simple
      explode: false
      schema:
        type: string
    page_num:
      name: page_num
      in: path
      description: "Page number of results to return, zero-indexed"
      required: true
      style: simple
      explode: false
      schema:
        type: integer
    match_key:
      name: match_key
      in: path
      description: "TBA Match Key, eg `2016nytr_qm1`"
      required: true
      style: simple
      explode: false
      schema:
        type: string
    district_key:
      name: district_key
      in: path
      description: "TBA District Key, eg `2016fim`"
      required: true
      style: simple
      explode: false
      schema:
        type: string
    team_key:
      name: team_key
      in: path
      description: "TBA Team Key, eg `frc254`"
      required: true
      style: simple
      explode: false
      schema:
        type: string
    event_key:
      name: event_key
      in: path
      description: "TBA Event Key, eg `2016nytr`"
      required: true
      style: simple
      explode: false
      schema:
        type: string
    district_abbreviation:
      name: district_abbreviation
      in: path
      description: "District abbreviation, eg `ne` or `fim`"
      required: true
      style: simple
      explode: false
      schema:
        type: string
  securitySchemes:
    apiKey:
      type: apiKey
      description: "Your TBA v3 API Key can be obtained from your [Account Page](/account)\
        \ on the TBA website."
      name: X-TBA-Auth-Key
      in: header
