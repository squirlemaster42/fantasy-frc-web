/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.16
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TeamSimple {
    /// TBA team key with the format `frcXXXX` with `XXXX` representing the team number.
    #[serde(rename = "key")]
    pub key: String,
    /// Official team number issued by FIRST.
    #[serde(rename = "team_number")]
    pub team_number: i32,
    /// Team nickname provided by FIRST.
    #[serde(rename = "nickname")]
    pub nickname: String,
    /// Official long name registered with FIRST.
    #[serde(rename = "name")]
    pub name: String,
    /// City of team derived from parsing the address registered with FIRST.
    #[serde(rename = "city", deserialize_with = "Option::deserialize")]
    pub city: Option<String>,
    /// State of team derived from parsing the address registered with FIRST.
    #[serde(rename = "state_prov", deserialize_with = "Option::deserialize")]
    pub state_prov: Option<String>,
    /// Country of team derived from parsing the address registered with FIRST.
    #[serde(rename = "country", deserialize_with = "Option::deserialize")]
    pub country: Option<String>,
}

impl TeamSimple {
    pub fn new(key: String, team_number: i32, nickname: String, name: String, city: Option<String>, state_prov: Option<String>, country: Option<String>) -> TeamSimple {
        TeamSimple {
            key,
            team_number,
            nickname,
            name,
            city,
            state_prov,
            country,
        }
    }
}

