/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.16
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchScoreBreakdown2025AllianceAutoReef {
    #[serde(rename = "topRow")]
    pub top_row: Box<models::MatchScoreBreakdown2025AllianceAutoReefTopRow>,
    #[serde(rename = "midRow")]
    pub mid_row: Box<models::MatchScoreBreakdown2025AllianceAutoReefTopRow>,
    #[serde(rename = "botRow")]
    pub bot_row: Box<models::MatchScoreBreakdown2025AllianceAutoReefTopRow>,
    #[serde(rename = "trough")]
    pub trough: i32,
    /// Unofficial TBA-computed value that sums the total number of game pieces scored in the botRow object.
    #[serde(rename = "tba_botRowCount", skip_serializing_if = "Option::is_none")]
    pub tba_bot_row_count: Option<i32>,
    /// Unofficial TBA-computed value that sums the total number of game pieces scored in the midRow object.
    #[serde(rename = "tba_midRowCount", skip_serializing_if = "Option::is_none")]
    pub tba_mid_row_count: Option<i32>,
    /// Unofficial TBA-computed value that sums the total number of game pieces scored in the topRow object.
    #[serde(rename = "tba_topRowCount", skip_serializing_if = "Option::is_none")]
    pub tba_top_row_count: Option<i32>,
}

impl MatchScoreBreakdown2025AllianceAutoReef {
    pub fn new(top_row: models::MatchScoreBreakdown2025AllianceAutoReefTopRow, mid_row: models::MatchScoreBreakdown2025AllianceAutoReefTopRow, bot_row: models::MatchScoreBreakdown2025AllianceAutoReefTopRow, trough: i32) -> MatchScoreBreakdown2025AllianceAutoReef {
        MatchScoreBreakdown2025AllianceAutoReef {
            top_row: Box::new(top_row),
            mid_row: Box::new(mid_row),
            bot_row: Box::new(bot_row),
            trough,
            tba_bot_row_count: None,
            tba_mid_row_count: None,
            tba_top_row_count: None,
        }
    }
}

